// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package aws

import (
	"context"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/resourcegroupstaggingapi"
	"sync"
)

var (
	lockresourcetaggingClientMockDescribeReportCreation               sync.RWMutex
	lockresourcetaggingClientMockDescribeReportCreationRequest        sync.RWMutex
	lockresourcetaggingClientMockDescribeReportCreationWithContext    sync.RWMutex
	lockresourcetaggingClientMockGetComplianceSummary                 sync.RWMutex
	lockresourcetaggingClientMockGetComplianceSummaryPages            sync.RWMutex
	lockresourcetaggingClientMockGetComplianceSummaryPagesWithContext sync.RWMutex
	lockresourcetaggingClientMockGetComplianceSummaryRequest          sync.RWMutex
	lockresourcetaggingClientMockGetComplianceSummaryWithContext      sync.RWMutex
	lockresourcetaggingClientMockGetResources                         sync.RWMutex
	lockresourcetaggingClientMockGetResourcesPages                    sync.RWMutex
	lockresourcetaggingClientMockGetResourcesPagesWithContext         sync.RWMutex
	lockresourcetaggingClientMockGetResourcesRequest                  sync.RWMutex
	lockresourcetaggingClientMockGetResourcesWithContext              sync.RWMutex
	lockresourcetaggingClientMockGetTagKeys                           sync.RWMutex
	lockresourcetaggingClientMockGetTagKeysPages                      sync.RWMutex
	lockresourcetaggingClientMockGetTagKeysPagesWithContext           sync.RWMutex
	lockresourcetaggingClientMockGetTagKeysRequest                    sync.RWMutex
	lockresourcetaggingClientMockGetTagKeysWithContext                sync.RWMutex
	lockresourcetaggingClientMockGetTagValues                         sync.RWMutex
	lockresourcetaggingClientMockGetTagValuesPages                    sync.RWMutex
	lockresourcetaggingClientMockGetTagValuesPagesWithContext         sync.RWMutex
	lockresourcetaggingClientMockGetTagValuesRequest                  sync.RWMutex
	lockresourcetaggingClientMockGetTagValuesWithContext              sync.RWMutex
	lockresourcetaggingClientMockStartReportCreation                  sync.RWMutex
	lockresourcetaggingClientMockStartReportCreationRequest           sync.RWMutex
	lockresourcetaggingClientMockStartReportCreationWithContext       sync.RWMutex
	lockresourcetaggingClientMockTagResources                         sync.RWMutex
	lockresourcetaggingClientMockTagResourcesRequest                  sync.RWMutex
	lockresourcetaggingClientMockTagResourcesWithContext              sync.RWMutex
	lockresourcetaggingClientMockUntagResources                       sync.RWMutex
	lockresourcetaggingClientMockUntagResourcesRequest                sync.RWMutex
	lockresourcetaggingClientMockUntagResourcesWithContext            sync.RWMutex
)

// Ensure, that resourcetaggingClientMock does implement resourcetaggingClient.
// If this is not the case, regenerate this file with moq.
var _ resourcetaggingClient = &resourcetaggingClientMock{}

// resourcetaggingClientMock is a mock implementation of resourcetaggingClient.
//
//     func TestSomethingThatUsesresourcetaggingClient(t *testing.T) {
//
//         // make and configure a mocked resourcetaggingClient
//         mockedresourcetaggingClient := &resourcetaggingClientMock{
//             DescribeReportCreationFunc: func(in1 *resourcegroupstaggingapi.DescribeReportCreationInput) (*resourcegroupstaggingapi.DescribeReportCreationOutput, error) {
// 	               panic("mock out the DescribeReportCreation method")
//             },
//             DescribeReportCreationRequestFunc: func(in1 *resourcegroupstaggingapi.DescribeReportCreationInput) (*request.Request, *resourcegroupstaggingapi.DescribeReportCreationOutput) {
// 	               panic("mock out the DescribeReportCreationRequest method")
//             },
//             DescribeReportCreationWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.DescribeReportCreationInput, in3 ...request.Option) (*resourcegroupstaggingapi.DescribeReportCreationOutput, error) {
// 	               panic("mock out the DescribeReportCreationWithContext method")
//             },
//             GetComplianceSummaryFunc: func(in1 *resourcegroupstaggingapi.GetComplianceSummaryInput) (*resourcegroupstaggingapi.GetComplianceSummaryOutput, error) {
// 	               panic("mock out the GetComplianceSummary method")
//             },
//             GetComplianceSummaryPagesFunc: func(in1 *resourcegroupstaggingapi.GetComplianceSummaryInput, in2 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool) error {
// 	               panic("mock out the GetComplianceSummaryPages method")
//             },
//             GetComplianceSummaryPagesWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.GetComplianceSummaryInput, in3 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool, in4 ...request.Option) error {
// 	               panic("mock out the GetComplianceSummaryPagesWithContext method")
//             },
//             GetComplianceSummaryRequestFunc: func(in1 *resourcegroupstaggingapi.GetComplianceSummaryInput) (*request.Request, *resourcegroupstaggingapi.GetComplianceSummaryOutput) {
// 	               panic("mock out the GetComplianceSummaryRequest method")
//             },
//             GetComplianceSummaryWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.GetComplianceSummaryInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetComplianceSummaryOutput, error) {
// 	               panic("mock out the GetComplianceSummaryWithContext method")
//             },
//             GetResourcesFunc: func(in1 *resourcegroupstaggingapi.GetResourcesInput) (*resourcegroupstaggingapi.GetResourcesOutput, error) {
// 	               panic("mock out the GetResources method")
//             },
//             GetResourcesPagesFunc: func(in1 *resourcegroupstaggingapi.GetResourcesInput, in2 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool) error {
// 	               panic("mock out the GetResourcesPages method")
//             },
//             GetResourcesPagesWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.GetResourcesInput, in3 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool, in4 ...request.Option) error {
// 	               panic("mock out the GetResourcesPagesWithContext method")
//             },
//             GetResourcesRequestFunc: func(in1 *resourcegroupstaggingapi.GetResourcesInput) (*request.Request, *resourcegroupstaggingapi.GetResourcesOutput) {
// 	               panic("mock out the GetResourcesRequest method")
//             },
//             GetResourcesWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.GetResourcesInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetResourcesOutput, error) {
// 	               panic("mock out the GetResourcesWithContext method")
//             },
//             GetTagKeysFunc: func(in1 *resourcegroupstaggingapi.GetTagKeysInput) (*resourcegroupstaggingapi.GetTagKeysOutput, error) {
// 	               panic("mock out the GetTagKeys method")
//             },
//             GetTagKeysPagesFunc: func(in1 *resourcegroupstaggingapi.GetTagKeysInput, in2 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool) error {
// 	               panic("mock out the GetTagKeysPages method")
//             },
//             GetTagKeysPagesWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagKeysInput, in3 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool, in4 ...request.Option) error {
// 	               panic("mock out the GetTagKeysPagesWithContext method")
//             },
//             GetTagKeysRequestFunc: func(in1 *resourcegroupstaggingapi.GetTagKeysInput) (*request.Request, *resourcegroupstaggingapi.GetTagKeysOutput) {
// 	               panic("mock out the GetTagKeysRequest method")
//             },
//             GetTagKeysWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagKeysInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetTagKeysOutput, error) {
// 	               panic("mock out the GetTagKeysWithContext method")
//             },
//             GetTagValuesFunc: func(in1 *resourcegroupstaggingapi.GetTagValuesInput) (*resourcegroupstaggingapi.GetTagValuesOutput, error) {
// 	               panic("mock out the GetTagValues method")
//             },
//             GetTagValuesPagesFunc: func(in1 *resourcegroupstaggingapi.GetTagValuesInput, in2 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool) error {
// 	               panic("mock out the GetTagValuesPages method")
//             },
//             GetTagValuesPagesWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagValuesInput, in3 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool, in4 ...request.Option) error {
// 	               panic("mock out the GetTagValuesPagesWithContext method")
//             },
//             GetTagValuesRequestFunc: func(in1 *resourcegroupstaggingapi.GetTagValuesInput) (*request.Request, *resourcegroupstaggingapi.GetTagValuesOutput) {
// 	               panic("mock out the GetTagValuesRequest method")
//             },
//             GetTagValuesWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagValuesInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetTagValuesOutput, error) {
// 	               panic("mock out the GetTagValuesWithContext method")
//             },
//             StartReportCreationFunc: func(in1 *resourcegroupstaggingapi.StartReportCreationInput) (*resourcegroupstaggingapi.StartReportCreationOutput, error) {
// 	               panic("mock out the StartReportCreation method")
//             },
//             StartReportCreationRequestFunc: func(in1 *resourcegroupstaggingapi.StartReportCreationInput) (*request.Request, *resourcegroupstaggingapi.StartReportCreationOutput) {
// 	               panic("mock out the StartReportCreationRequest method")
//             },
//             StartReportCreationWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.StartReportCreationInput, in3 ...request.Option) (*resourcegroupstaggingapi.StartReportCreationOutput, error) {
// 	               panic("mock out the StartReportCreationWithContext method")
//             },
//             TagResourcesFunc: func(in1 *resourcegroupstaggingapi.TagResourcesInput) (*resourcegroupstaggingapi.TagResourcesOutput, error) {
// 	               panic("mock out the TagResources method")
//             },
//             TagResourcesRequestFunc: func(in1 *resourcegroupstaggingapi.TagResourcesInput) (*request.Request, *resourcegroupstaggingapi.TagResourcesOutput) {
// 	               panic("mock out the TagResourcesRequest method")
//             },
//             TagResourcesWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.TagResourcesInput, in3 ...request.Option) (*resourcegroupstaggingapi.TagResourcesOutput, error) {
// 	               panic("mock out the TagResourcesWithContext method")
//             },
//             UntagResourcesFunc: func(in1 *resourcegroupstaggingapi.UntagResourcesInput) (*resourcegroupstaggingapi.UntagResourcesOutput, error) {
// 	               panic("mock out the UntagResources method")
//             },
//             UntagResourcesRequestFunc: func(in1 *resourcegroupstaggingapi.UntagResourcesInput) (*request.Request, *resourcegroupstaggingapi.UntagResourcesOutput) {
// 	               panic("mock out the UntagResourcesRequest method")
//             },
//             UntagResourcesWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.UntagResourcesInput, in3 ...request.Option) (*resourcegroupstaggingapi.UntagResourcesOutput, error) {
// 	               panic("mock out the UntagResourcesWithContext method")
//             },
//         }
//
//         // use mockedresourcetaggingClient in code that requires resourcetaggingClient
//         // and then make assertions.
//
//     }
type resourcetaggingClientMock struct {
	// DescribeReportCreationFunc mocks the DescribeReportCreation method.
	DescribeReportCreationFunc func(in1 *resourcegroupstaggingapi.DescribeReportCreationInput) (*resourcegroupstaggingapi.DescribeReportCreationOutput, error)

	// DescribeReportCreationRequestFunc mocks the DescribeReportCreationRequest method.
	DescribeReportCreationRequestFunc func(in1 *resourcegroupstaggingapi.DescribeReportCreationInput) (*request.Request, *resourcegroupstaggingapi.DescribeReportCreationOutput)

	// DescribeReportCreationWithContextFunc mocks the DescribeReportCreationWithContext method.
	DescribeReportCreationWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.DescribeReportCreationInput, in3 ...request.Option) (*resourcegroupstaggingapi.DescribeReportCreationOutput, error)

	// GetComplianceSummaryFunc mocks the GetComplianceSummary method.
	GetComplianceSummaryFunc func(in1 *resourcegroupstaggingapi.GetComplianceSummaryInput) (*resourcegroupstaggingapi.GetComplianceSummaryOutput, error)

	// GetComplianceSummaryPagesFunc mocks the GetComplianceSummaryPages method.
	GetComplianceSummaryPagesFunc func(in1 *resourcegroupstaggingapi.GetComplianceSummaryInput, in2 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool) error

	// GetComplianceSummaryPagesWithContextFunc mocks the GetComplianceSummaryPagesWithContext method.
	GetComplianceSummaryPagesWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.GetComplianceSummaryInput, in3 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool, in4 ...request.Option) error

	// GetComplianceSummaryRequestFunc mocks the GetComplianceSummaryRequest method.
	GetComplianceSummaryRequestFunc func(in1 *resourcegroupstaggingapi.GetComplianceSummaryInput) (*request.Request, *resourcegroupstaggingapi.GetComplianceSummaryOutput)

	// GetComplianceSummaryWithContextFunc mocks the GetComplianceSummaryWithContext method.
	GetComplianceSummaryWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.GetComplianceSummaryInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetComplianceSummaryOutput, error)

	// GetResourcesFunc mocks the GetResources method.
	GetResourcesFunc func(in1 *resourcegroupstaggingapi.GetResourcesInput) (*resourcegroupstaggingapi.GetResourcesOutput, error)

	// GetResourcesPagesFunc mocks the GetResourcesPages method.
	GetResourcesPagesFunc func(in1 *resourcegroupstaggingapi.GetResourcesInput, in2 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool) error

	// GetResourcesPagesWithContextFunc mocks the GetResourcesPagesWithContext method.
	GetResourcesPagesWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.GetResourcesInput, in3 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool, in4 ...request.Option) error

	// GetResourcesRequestFunc mocks the GetResourcesRequest method.
	GetResourcesRequestFunc func(in1 *resourcegroupstaggingapi.GetResourcesInput) (*request.Request, *resourcegroupstaggingapi.GetResourcesOutput)

	// GetResourcesWithContextFunc mocks the GetResourcesWithContext method.
	GetResourcesWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.GetResourcesInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetResourcesOutput, error)

	// GetTagKeysFunc mocks the GetTagKeys method.
	GetTagKeysFunc func(in1 *resourcegroupstaggingapi.GetTagKeysInput) (*resourcegroupstaggingapi.GetTagKeysOutput, error)

	// GetTagKeysPagesFunc mocks the GetTagKeysPages method.
	GetTagKeysPagesFunc func(in1 *resourcegroupstaggingapi.GetTagKeysInput, in2 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool) error

	// GetTagKeysPagesWithContextFunc mocks the GetTagKeysPagesWithContext method.
	GetTagKeysPagesWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagKeysInput, in3 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool, in4 ...request.Option) error

	// GetTagKeysRequestFunc mocks the GetTagKeysRequest method.
	GetTagKeysRequestFunc func(in1 *resourcegroupstaggingapi.GetTagKeysInput) (*request.Request, *resourcegroupstaggingapi.GetTagKeysOutput)

	// GetTagKeysWithContextFunc mocks the GetTagKeysWithContext method.
	GetTagKeysWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagKeysInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetTagKeysOutput, error)

	// GetTagValuesFunc mocks the GetTagValues method.
	GetTagValuesFunc func(in1 *resourcegroupstaggingapi.GetTagValuesInput) (*resourcegroupstaggingapi.GetTagValuesOutput, error)

	// GetTagValuesPagesFunc mocks the GetTagValuesPages method.
	GetTagValuesPagesFunc func(in1 *resourcegroupstaggingapi.GetTagValuesInput, in2 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool) error

	// GetTagValuesPagesWithContextFunc mocks the GetTagValuesPagesWithContext method.
	GetTagValuesPagesWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagValuesInput, in3 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool, in4 ...request.Option) error

	// GetTagValuesRequestFunc mocks the GetTagValuesRequest method.
	GetTagValuesRequestFunc func(in1 *resourcegroupstaggingapi.GetTagValuesInput) (*request.Request, *resourcegroupstaggingapi.GetTagValuesOutput)

	// GetTagValuesWithContextFunc mocks the GetTagValuesWithContext method.
	GetTagValuesWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagValuesInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetTagValuesOutput, error)

	// StartReportCreationFunc mocks the StartReportCreation method.
	StartReportCreationFunc func(in1 *resourcegroupstaggingapi.StartReportCreationInput) (*resourcegroupstaggingapi.StartReportCreationOutput, error)

	// StartReportCreationRequestFunc mocks the StartReportCreationRequest method.
	StartReportCreationRequestFunc func(in1 *resourcegroupstaggingapi.StartReportCreationInput) (*request.Request, *resourcegroupstaggingapi.StartReportCreationOutput)

	// StartReportCreationWithContextFunc mocks the StartReportCreationWithContext method.
	StartReportCreationWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.StartReportCreationInput, in3 ...request.Option) (*resourcegroupstaggingapi.StartReportCreationOutput, error)

	// TagResourcesFunc mocks the TagResources method.
	TagResourcesFunc func(in1 *resourcegroupstaggingapi.TagResourcesInput) (*resourcegroupstaggingapi.TagResourcesOutput, error)

	// TagResourcesRequestFunc mocks the TagResourcesRequest method.
	TagResourcesRequestFunc func(in1 *resourcegroupstaggingapi.TagResourcesInput) (*request.Request, *resourcegroupstaggingapi.TagResourcesOutput)

	// TagResourcesWithContextFunc mocks the TagResourcesWithContext method.
	TagResourcesWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.TagResourcesInput, in3 ...request.Option) (*resourcegroupstaggingapi.TagResourcesOutput, error)

	// UntagResourcesFunc mocks the UntagResources method.
	UntagResourcesFunc func(in1 *resourcegroupstaggingapi.UntagResourcesInput) (*resourcegroupstaggingapi.UntagResourcesOutput, error)

	// UntagResourcesRequestFunc mocks the UntagResourcesRequest method.
	UntagResourcesRequestFunc func(in1 *resourcegroupstaggingapi.UntagResourcesInput) (*request.Request, *resourcegroupstaggingapi.UntagResourcesOutput)

	// UntagResourcesWithContextFunc mocks the UntagResourcesWithContext method.
	UntagResourcesWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.UntagResourcesInput, in3 ...request.Option) (*resourcegroupstaggingapi.UntagResourcesOutput, error)

	// calls tracks calls to the methods.
	calls struct {
		// DescribeReportCreation holds details about calls to the DescribeReportCreation method.
		DescribeReportCreation []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.DescribeReportCreationInput
		}
		// DescribeReportCreationRequest holds details about calls to the DescribeReportCreationRequest method.
		DescribeReportCreationRequest []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.DescribeReportCreationInput
		}
		// DescribeReportCreationWithContext holds details about calls to the DescribeReportCreationWithContext method.
		DescribeReportCreationWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.DescribeReportCreationInput
			// In3 is the in3 argument value.
			In3 []request.Option
		}
		// GetComplianceSummary holds details about calls to the GetComplianceSummary method.
		GetComplianceSummary []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
		}
		// GetComplianceSummaryPages holds details about calls to the GetComplianceSummaryPages method.
		GetComplianceSummaryPages []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
			// In2 is the in2 argument value.
			In2 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool
		}
		// GetComplianceSummaryPagesWithContext holds details about calls to the GetComplianceSummaryPagesWithContext method.
		GetComplianceSummaryPagesWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.GetComplianceSummaryInput
			// In3 is the in3 argument value.
			In3 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool
			// In4 is the in4 argument value.
			In4 []request.Option
		}
		// GetComplianceSummaryRequest holds details about calls to the GetComplianceSummaryRequest method.
		GetComplianceSummaryRequest []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
		}
		// GetComplianceSummaryWithContext holds details about calls to the GetComplianceSummaryWithContext method.
		GetComplianceSummaryWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.GetComplianceSummaryInput
			// In3 is the in3 argument value.
			In3 []request.Option
		}
		// GetResources holds details about calls to the GetResources method.
		GetResources []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetResourcesInput
		}
		// GetResourcesPages holds details about calls to the GetResourcesPages method.
		GetResourcesPages []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetResourcesInput
			// In2 is the in2 argument value.
			In2 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool
		}
		// GetResourcesPagesWithContext holds details about calls to the GetResourcesPagesWithContext method.
		GetResourcesPagesWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.GetResourcesInput
			// In3 is the in3 argument value.
			In3 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool
			// In4 is the in4 argument value.
			In4 []request.Option
		}
		// GetResourcesRequest holds details about calls to the GetResourcesRequest method.
		GetResourcesRequest []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetResourcesInput
		}
		// GetResourcesWithContext holds details about calls to the GetResourcesWithContext method.
		GetResourcesWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.GetResourcesInput
			// In3 is the in3 argument value.
			In3 []request.Option
		}
		// GetTagKeys holds details about calls to the GetTagKeys method.
		GetTagKeys []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetTagKeysInput
		}
		// GetTagKeysPages holds details about calls to the GetTagKeysPages method.
		GetTagKeysPages []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetTagKeysInput
			// In2 is the in2 argument value.
			In2 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool
		}
		// GetTagKeysPagesWithContext holds details about calls to the GetTagKeysPagesWithContext method.
		GetTagKeysPagesWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.GetTagKeysInput
			// In3 is the in3 argument value.
			In3 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool
			// In4 is the in4 argument value.
			In4 []request.Option
		}
		// GetTagKeysRequest holds details about calls to the GetTagKeysRequest method.
		GetTagKeysRequest []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetTagKeysInput
		}
		// GetTagKeysWithContext holds details about calls to the GetTagKeysWithContext method.
		GetTagKeysWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.GetTagKeysInput
			// In3 is the in3 argument value.
			In3 []request.Option
		}
		// GetTagValues holds details about calls to the GetTagValues method.
		GetTagValues []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetTagValuesInput
		}
		// GetTagValuesPages holds details about calls to the GetTagValuesPages method.
		GetTagValuesPages []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetTagValuesInput
			// In2 is the in2 argument value.
			In2 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool
		}
		// GetTagValuesPagesWithContext holds details about calls to the GetTagValuesPagesWithContext method.
		GetTagValuesPagesWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.GetTagValuesInput
			// In3 is the in3 argument value.
			In3 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool
			// In4 is the in4 argument value.
			In4 []request.Option
		}
		// GetTagValuesRequest holds details about calls to the GetTagValuesRequest method.
		GetTagValuesRequest []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetTagValuesInput
		}
		// GetTagValuesWithContext holds details about calls to the GetTagValuesWithContext method.
		GetTagValuesWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.GetTagValuesInput
			// In3 is the in3 argument value.
			In3 []request.Option
		}
		// StartReportCreation holds details about calls to the StartReportCreation method.
		StartReportCreation []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.StartReportCreationInput
		}
		// StartReportCreationRequest holds details about calls to the StartReportCreationRequest method.
		StartReportCreationRequest []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.StartReportCreationInput
		}
		// StartReportCreationWithContext holds details about calls to the StartReportCreationWithContext method.
		StartReportCreationWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.StartReportCreationInput
			// In3 is the in3 argument value.
			In3 []request.Option
		}
		// TagResources holds details about calls to the TagResources method.
		TagResources []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.TagResourcesInput
		}
		// TagResourcesRequest holds details about calls to the TagResourcesRequest method.
		TagResourcesRequest []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.TagResourcesInput
		}
		// TagResourcesWithContext holds details about calls to the TagResourcesWithContext method.
		TagResourcesWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.TagResourcesInput
			// In3 is the in3 argument value.
			In3 []request.Option
		}
		// UntagResources holds details about calls to the UntagResources method.
		UntagResources []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.UntagResourcesInput
		}
		// UntagResourcesRequest holds details about calls to the UntagResourcesRequest method.
		UntagResourcesRequest []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.UntagResourcesInput
		}
		// UntagResourcesWithContext holds details about calls to the UntagResourcesWithContext method.
		UntagResourcesWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.UntagResourcesInput
			// In3 is the in3 argument value.
			In3 []request.Option
		}
	}
}

// DescribeReportCreation calls DescribeReportCreationFunc.
func (mock *resourcetaggingClientMock) DescribeReportCreation(in1 *resourcegroupstaggingapi.DescribeReportCreationInput) (*resourcegroupstaggingapi.DescribeReportCreationOutput, error) {
	if mock.DescribeReportCreationFunc == nil {
		panic("resourcetaggingClientMock.DescribeReportCreationFunc: method is nil but resourcetaggingClient.DescribeReportCreation was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.DescribeReportCreationInput
	}{
		In1: in1,
	}
	lockresourcetaggingClientMockDescribeReportCreation.Lock()
	mock.calls.DescribeReportCreation = append(mock.calls.DescribeReportCreation, callInfo)
	lockresourcetaggingClientMockDescribeReportCreation.Unlock()
	return mock.DescribeReportCreationFunc(in1)
}

// DescribeReportCreationCalls gets all the calls that were made to DescribeReportCreation.
// Check the length with:
//     len(mockedresourcetaggingClient.DescribeReportCreationCalls())
func (mock *resourcetaggingClientMock) DescribeReportCreationCalls() []struct {
	In1 *resourcegroupstaggingapi.DescribeReportCreationInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.DescribeReportCreationInput
	}
	lockresourcetaggingClientMockDescribeReportCreation.RLock()
	calls = mock.calls.DescribeReportCreation
	lockresourcetaggingClientMockDescribeReportCreation.RUnlock()
	return calls
}

// DescribeReportCreationRequest calls DescribeReportCreationRequestFunc.
func (mock *resourcetaggingClientMock) DescribeReportCreationRequest(in1 *resourcegroupstaggingapi.DescribeReportCreationInput) (*request.Request, *resourcegroupstaggingapi.DescribeReportCreationOutput) {
	if mock.DescribeReportCreationRequestFunc == nil {
		panic("resourcetaggingClientMock.DescribeReportCreationRequestFunc: method is nil but resourcetaggingClient.DescribeReportCreationRequest was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.DescribeReportCreationInput
	}{
		In1: in1,
	}
	lockresourcetaggingClientMockDescribeReportCreationRequest.Lock()
	mock.calls.DescribeReportCreationRequest = append(mock.calls.DescribeReportCreationRequest, callInfo)
	lockresourcetaggingClientMockDescribeReportCreationRequest.Unlock()
	return mock.DescribeReportCreationRequestFunc(in1)
}

// DescribeReportCreationRequestCalls gets all the calls that were made to DescribeReportCreationRequest.
// Check the length with:
//     len(mockedresourcetaggingClient.DescribeReportCreationRequestCalls())
func (mock *resourcetaggingClientMock) DescribeReportCreationRequestCalls() []struct {
	In1 *resourcegroupstaggingapi.DescribeReportCreationInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.DescribeReportCreationInput
	}
	lockresourcetaggingClientMockDescribeReportCreationRequest.RLock()
	calls = mock.calls.DescribeReportCreationRequest
	lockresourcetaggingClientMockDescribeReportCreationRequest.RUnlock()
	return calls
}

// DescribeReportCreationWithContext calls DescribeReportCreationWithContextFunc.
func (mock *resourcetaggingClientMock) DescribeReportCreationWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.DescribeReportCreationInput, in3 ...request.Option) (*resourcegroupstaggingapi.DescribeReportCreationOutput, error) {
	if mock.DescribeReportCreationWithContextFunc == nil {
		panic("resourcetaggingClientMock.DescribeReportCreationWithContextFunc: method is nil but resourcetaggingClient.DescribeReportCreationWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.DescribeReportCreationInput
		In3 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
	}
	lockresourcetaggingClientMockDescribeReportCreationWithContext.Lock()
	mock.calls.DescribeReportCreationWithContext = append(mock.calls.DescribeReportCreationWithContext, callInfo)
	lockresourcetaggingClientMockDescribeReportCreationWithContext.Unlock()
	return mock.DescribeReportCreationWithContextFunc(in1, in2, in3...)
}

// DescribeReportCreationWithContextCalls gets all the calls that were made to DescribeReportCreationWithContext.
// Check the length with:
//     len(mockedresourcetaggingClient.DescribeReportCreationWithContextCalls())
func (mock *resourcetaggingClientMock) DescribeReportCreationWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.DescribeReportCreationInput
	In3 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.DescribeReportCreationInput
		In3 []request.Option
	}
	lockresourcetaggingClientMockDescribeReportCreationWithContext.RLock()
	calls = mock.calls.DescribeReportCreationWithContext
	lockresourcetaggingClientMockDescribeReportCreationWithContext.RUnlock()
	return calls
}

// GetComplianceSummary calls GetComplianceSummaryFunc.
func (mock *resourcetaggingClientMock) GetComplianceSummary(in1 *resourcegroupstaggingapi.GetComplianceSummaryInput) (*resourcegroupstaggingapi.GetComplianceSummaryOutput, error) {
	if mock.GetComplianceSummaryFunc == nil {
		panic("resourcetaggingClientMock.GetComplianceSummaryFunc: method is nil but resourcetaggingClient.GetComplianceSummary was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
	}{
		In1: in1,
	}
	lockresourcetaggingClientMockGetComplianceSummary.Lock()
	mock.calls.GetComplianceSummary = append(mock.calls.GetComplianceSummary, callInfo)
	lockresourcetaggingClientMockGetComplianceSummary.Unlock()
	return mock.GetComplianceSummaryFunc(in1)
}

// GetComplianceSummaryCalls gets all the calls that were made to GetComplianceSummary.
// Check the length with:
//     len(mockedresourcetaggingClient.GetComplianceSummaryCalls())
func (mock *resourcetaggingClientMock) GetComplianceSummaryCalls() []struct {
	In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
	}
	lockresourcetaggingClientMockGetComplianceSummary.RLock()
	calls = mock.calls.GetComplianceSummary
	lockresourcetaggingClientMockGetComplianceSummary.RUnlock()
	return calls
}

// GetComplianceSummaryPages calls GetComplianceSummaryPagesFunc.
func (mock *resourcetaggingClientMock) GetComplianceSummaryPages(in1 *resourcegroupstaggingapi.GetComplianceSummaryInput, in2 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool) error {
	if mock.GetComplianceSummaryPagesFunc == nil {
		panic("resourcetaggingClientMock.GetComplianceSummaryPagesFunc: method is nil but resourcetaggingClient.GetComplianceSummaryPages was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
		In2 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool
	}{
		In1: in1,
		In2: in2,
	}
	lockresourcetaggingClientMockGetComplianceSummaryPages.Lock()
	mock.calls.GetComplianceSummaryPages = append(mock.calls.GetComplianceSummaryPages, callInfo)
	lockresourcetaggingClientMockGetComplianceSummaryPages.Unlock()
	return mock.GetComplianceSummaryPagesFunc(in1, in2)
}

// GetComplianceSummaryPagesCalls gets all the calls that were made to GetComplianceSummaryPages.
// Check the length with:
//     len(mockedresourcetaggingClient.GetComplianceSummaryPagesCalls())
func (mock *resourcetaggingClientMock) GetComplianceSummaryPagesCalls() []struct {
	In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
	In2 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
		In2 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool
	}
	lockresourcetaggingClientMockGetComplianceSummaryPages.RLock()
	calls = mock.calls.GetComplianceSummaryPages
	lockresourcetaggingClientMockGetComplianceSummaryPages.RUnlock()
	return calls
}

// GetComplianceSummaryPagesWithContext calls GetComplianceSummaryPagesWithContextFunc.
func (mock *resourcetaggingClientMock) GetComplianceSummaryPagesWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.GetComplianceSummaryInput, in3 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool, in4 ...request.Option) error {
	if mock.GetComplianceSummaryPagesWithContextFunc == nil {
		panic("resourcetaggingClientMock.GetComplianceSummaryPagesWithContextFunc: method is nil but resourcetaggingClient.GetComplianceSummaryPagesWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetComplianceSummaryInput
		In3 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool
		In4 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
		In4: in4,
	}
	lockresourcetaggingClientMockGetComplianceSummaryPagesWithContext.Lock()
	mock.calls.GetComplianceSummaryPagesWithContext = append(mock.calls.GetComplianceSummaryPagesWithContext, callInfo)
	lockresourcetaggingClientMockGetComplianceSummaryPagesWithContext.Unlock()
	return mock.GetComplianceSummaryPagesWithContextFunc(in1, in2, in3, in4...)
}

// GetComplianceSummaryPagesWithContextCalls gets all the calls that were made to GetComplianceSummaryPagesWithContext.
// Check the length with:
//     len(mockedresourcetaggingClient.GetComplianceSummaryPagesWithContextCalls())
func (mock *resourcetaggingClientMock) GetComplianceSummaryPagesWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.GetComplianceSummaryInput
	In3 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool
	In4 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetComplianceSummaryInput
		In3 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool
		In4 []request.Option
	}
	lockresourcetaggingClientMockGetComplianceSummaryPagesWithContext.RLock()
	calls = mock.calls.GetComplianceSummaryPagesWithContext
	lockresourcetaggingClientMockGetComplianceSummaryPagesWithContext.RUnlock()
	return calls
}

// GetComplianceSummaryRequest calls GetComplianceSummaryRequestFunc.
func (mock *resourcetaggingClientMock) GetComplianceSummaryRequest(in1 *resourcegroupstaggingapi.GetComplianceSummaryInput) (*request.Request, *resourcegroupstaggingapi.GetComplianceSummaryOutput) {
	if mock.GetComplianceSummaryRequestFunc == nil {
		panic("resourcetaggingClientMock.GetComplianceSummaryRequestFunc: method is nil but resourcetaggingClient.GetComplianceSummaryRequest was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
	}{
		In1: in1,
	}
	lockresourcetaggingClientMockGetComplianceSummaryRequest.Lock()
	mock.calls.GetComplianceSummaryRequest = append(mock.calls.GetComplianceSummaryRequest, callInfo)
	lockresourcetaggingClientMockGetComplianceSummaryRequest.Unlock()
	return mock.GetComplianceSummaryRequestFunc(in1)
}

// GetComplianceSummaryRequestCalls gets all the calls that were made to GetComplianceSummaryRequest.
// Check the length with:
//     len(mockedresourcetaggingClient.GetComplianceSummaryRequestCalls())
func (mock *resourcetaggingClientMock) GetComplianceSummaryRequestCalls() []struct {
	In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
	}
	lockresourcetaggingClientMockGetComplianceSummaryRequest.RLock()
	calls = mock.calls.GetComplianceSummaryRequest
	lockresourcetaggingClientMockGetComplianceSummaryRequest.RUnlock()
	return calls
}

// GetComplianceSummaryWithContext calls GetComplianceSummaryWithContextFunc.
func (mock *resourcetaggingClientMock) GetComplianceSummaryWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.GetComplianceSummaryInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetComplianceSummaryOutput, error) {
	if mock.GetComplianceSummaryWithContextFunc == nil {
		panic("resourcetaggingClientMock.GetComplianceSummaryWithContextFunc: method is nil but resourcetaggingClient.GetComplianceSummaryWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetComplianceSummaryInput
		In3 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
	}
	lockresourcetaggingClientMockGetComplianceSummaryWithContext.Lock()
	mock.calls.GetComplianceSummaryWithContext = append(mock.calls.GetComplianceSummaryWithContext, callInfo)
	lockresourcetaggingClientMockGetComplianceSummaryWithContext.Unlock()
	return mock.GetComplianceSummaryWithContextFunc(in1, in2, in3...)
}

// GetComplianceSummaryWithContextCalls gets all the calls that were made to GetComplianceSummaryWithContext.
// Check the length with:
//     len(mockedresourcetaggingClient.GetComplianceSummaryWithContextCalls())
func (mock *resourcetaggingClientMock) GetComplianceSummaryWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.GetComplianceSummaryInput
	In3 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetComplianceSummaryInput
		In3 []request.Option
	}
	lockresourcetaggingClientMockGetComplianceSummaryWithContext.RLock()
	calls = mock.calls.GetComplianceSummaryWithContext
	lockresourcetaggingClientMockGetComplianceSummaryWithContext.RUnlock()
	return calls
}

// GetResources calls GetResourcesFunc.
func (mock *resourcetaggingClientMock) GetResources(in1 *resourcegroupstaggingapi.GetResourcesInput) (*resourcegroupstaggingapi.GetResourcesOutput, error) {
	if mock.GetResourcesFunc == nil {
		panic("resourcetaggingClientMock.GetResourcesFunc: method is nil but resourcetaggingClient.GetResources was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetResourcesInput
	}{
		In1: in1,
	}
	lockresourcetaggingClientMockGetResources.Lock()
	mock.calls.GetResources = append(mock.calls.GetResources, callInfo)
	lockresourcetaggingClientMockGetResources.Unlock()
	return mock.GetResourcesFunc(in1)
}

// GetResourcesCalls gets all the calls that were made to GetResources.
// Check the length with:
//     len(mockedresourcetaggingClient.GetResourcesCalls())
func (mock *resourcetaggingClientMock) GetResourcesCalls() []struct {
	In1 *resourcegroupstaggingapi.GetResourcesInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetResourcesInput
	}
	lockresourcetaggingClientMockGetResources.RLock()
	calls = mock.calls.GetResources
	lockresourcetaggingClientMockGetResources.RUnlock()
	return calls
}

// GetResourcesPages calls GetResourcesPagesFunc.
func (mock *resourcetaggingClientMock) GetResourcesPages(in1 *resourcegroupstaggingapi.GetResourcesInput, in2 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool) error {
	if mock.GetResourcesPagesFunc == nil {
		panic("resourcetaggingClientMock.GetResourcesPagesFunc: method is nil but resourcetaggingClient.GetResourcesPages was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetResourcesInput
		In2 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool
	}{
		In1: in1,
		In2: in2,
	}
	lockresourcetaggingClientMockGetResourcesPages.Lock()
	mock.calls.GetResourcesPages = append(mock.calls.GetResourcesPages, callInfo)
	lockresourcetaggingClientMockGetResourcesPages.Unlock()
	return mock.GetResourcesPagesFunc(in1, in2)
}

// GetResourcesPagesCalls gets all the calls that were made to GetResourcesPages.
// Check the length with:
//     len(mockedresourcetaggingClient.GetResourcesPagesCalls())
func (mock *resourcetaggingClientMock) GetResourcesPagesCalls() []struct {
	In1 *resourcegroupstaggingapi.GetResourcesInput
	In2 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetResourcesInput
		In2 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool
	}
	lockresourcetaggingClientMockGetResourcesPages.RLock()
	calls = mock.calls.GetResourcesPages
	lockresourcetaggingClientMockGetResourcesPages.RUnlock()
	return calls
}

// GetResourcesPagesWithContext calls GetResourcesPagesWithContextFunc.
func (mock *resourcetaggingClientMock) GetResourcesPagesWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.GetResourcesInput, in3 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool, in4 ...request.Option) error {
	if mock.GetResourcesPagesWithContextFunc == nil {
		panic("resourcetaggingClientMock.GetResourcesPagesWithContextFunc: method is nil but resourcetaggingClient.GetResourcesPagesWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetResourcesInput
		In3 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool
		In4 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
		In4: in4,
	}
	lockresourcetaggingClientMockGetResourcesPagesWithContext.Lock()
	mock.calls.GetResourcesPagesWithContext = append(mock.calls.GetResourcesPagesWithContext, callInfo)
	lockresourcetaggingClientMockGetResourcesPagesWithContext.Unlock()
	return mock.GetResourcesPagesWithContextFunc(in1, in2, in3, in4...)
}

// GetResourcesPagesWithContextCalls gets all the calls that were made to GetResourcesPagesWithContext.
// Check the length with:
//     len(mockedresourcetaggingClient.GetResourcesPagesWithContextCalls())
func (mock *resourcetaggingClientMock) GetResourcesPagesWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.GetResourcesInput
	In3 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool
	In4 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetResourcesInput
		In3 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool
		In4 []request.Option
	}
	lockresourcetaggingClientMockGetResourcesPagesWithContext.RLock()
	calls = mock.calls.GetResourcesPagesWithContext
	lockresourcetaggingClientMockGetResourcesPagesWithContext.RUnlock()
	return calls
}

// GetResourcesRequest calls GetResourcesRequestFunc.
func (mock *resourcetaggingClientMock) GetResourcesRequest(in1 *resourcegroupstaggingapi.GetResourcesInput) (*request.Request, *resourcegroupstaggingapi.GetResourcesOutput) {
	if mock.GetResourcesRequestFunc == nil {
		panic("resourcetaggingClientMock.GetResourcesRequestFunc: method is nil but resourcetaggingClient.GetResourcesRequest was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetResourcesInput
	}{
		In1: in1,
	}
	lockresourcetaggingClientMockGetResourcesRequest.Lock()
	mock.calls.GetResourcesRequest = append(mock.calls.GetResourcesRequest, callInfo)
	lockresourcetaggingClientMockGetResourcesRequest.Unlock()
	return mock.GetResourcesRequestFunc(in1)
}

// GetResourcesRequestCalls gets all the calls that were made to GetResourcesRequest.
// Check the length with:
//     len(mockedresourcetaggingClient.GetResourcesRequestCalls())
func (mock *resourcetaggingClientMock) GetResourcesRequestCalls() []struct {
	In1 *resourcegroupstaggingapi.GetResourcesInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetResourcesInput
	}
	lockresourcetaggingClientMockGetResourcesRequest.RLock()
	calls = mock.calls.GetResourcesRequest
	lockresourcetaggingClientMockGetResourcesRequest.RUnlock()
	return calls
}

// GetResourcesWithContext calls GetResourcesWithContextFunc.
func (mock *resourcetaggingClientMock) GetResourcesWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.GetResourcesInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetResourcesOutput, error) {
	if mock.GetResourcesWithContextFunc == nil {
		panic("resourcetaggingClientMock.GetResourcesWithContextFunc: method is nil but resourcetaggingClient.GetResourcesWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetResourcesInput
		In3 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
	}
	lockresourcetaggingClientMockGetResourcesWithContext.Lock()
	mock.calls.GetResourcesWithContext = append(mock.calls.GetResourcesWithContext, callInfo)
	lockresourcetaggingClientMockGetResourcesWithContext.Unlock()
	return mock.GetResourcesWithContextFunc(in1, in2, in3...)
}

// GetResourcesWithContextCalls gets all the calls that were made to GetResourcesWithContext.
// Check the length with:
//     len(mockedresourcetaggingClient.GetResourcesWithContextCalls())
func (mock *resourcetaggingClientMock) GetResourcesWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.GetResourcesInput
	In3 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetResourcesInput
		In3 []request.Option
	}
	lockresourcetaggingClientMockGetResourcesWithContext.RLock()
	calls = mock.calls.GetResourcesWithContext
	lockresourcetaggingClientMockGetResourcesWithContext.RUnlock()
	return calls
}

// GetTagKeys calls GetTagKeysFunc.
func (mock *resourcetaggingClientMock) GetTagKeys(in1 *resourcegroupstaggingapi.GetTagKeysInput) (*resourcegroupstaggingapi.GetTagKeysOutput, error) {
	if mock.GetTagKeysFunc == nil {
		panic("resourcetaggingClientMock.GetTagKeysFunc: method is nil but resourcetaggingClient.GetTagKeys was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetTagKeysInput
	}{
		In1: in1,
	}
	lockresourcetaggingClientMockGetTagKeys.Lock()
	mock.calls.GetTagKeys = append(mock.calls.GetTagKeys, callInfo)
	lockresourcetaggingClientMockGetTagKeys.Unlock()
	return mock.GetTagKeysFunc(in1)
}

// GetTagKeysCalls gets all the calls that were made to GetTagKeys.
// Check the length with:
//     len(mockedresourcetaggingClient.GetTagKeysCalls())
func (mock *resourcetaggingClientMock) GetTagKeysCalls() []struct {
	In1 *resourcegroupstaggingapi.GetTagKeysInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetTagKeysInput
	}
	lockresourcetaggingClientMockGetTagKeys.RLock()
	calls = mock.calls.GetTagKeys
	lockresourcetaggingClientMockGetTagKeys.RUnlock()
	return calls
}

// GetTagKeysPages calls GetTagKeysPagesFunc.
func (mock *resourcetaggingClientMock) GetTagKeysPages(in1 *resourcegroupstaggingapi.GetTagKeysInput, in2 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool) error {
	if mock.GetTagKeysPagesFunc == nil {
		panic("resourcetaggingClientMock.GetTagKeysPagesFunc: method is nil but resourcetaggingClient.GetTagKeysPages was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetTagKeysInput
		In2 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool
	}{
		In1: in1,
		In2: in2,
	}
	lockresourcetaggingClientMockGetTagKeysPages.Lock()
	mock.calls.GetTagKeysPages = append(mock.calls.GetTagKeysPages, callInfo)
	lockresourcetaggingClientMockGetTagKeysPages.Unlock()
	return mock.GetTagKeysPagesFunc(in1, in2)
}

// GetTagKeysPagesCalls gets all the calls that were made to GetTagKeysPages.
// Check the length with:
//     len(mockedresourcetaggingClient.GetTagKeysPagesCalls())
func (mock *resourcetaggingClientMock) GetTagKeysPagesCalls() []struct {
	In1 *resourcegroupstaggingapi.GetTagKeysInput
	In2 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetTagKeysInput
		In2 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool
	}
	lockresourcetaggingClientMockGetTagKeysPages.RLock()
	calls = mock.calls.GetTagKeysPages
	lockresourcetaggingClientMockGetTagKeysPages.RUnlock()
	return calls
}

// GetTagKeysPagesWithContext calls GetTagKeysPagesWithContextFunc.
func (mock *resourcetaggingClientMock) GetTagKeysPagesWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagKeysInput, in3 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool, in4 ...request.Option) error {
	if mock.GetTagKeysPagesWithContextFunc == nil {
		panic("resourcetaggingClientMock.GetTagKeysPagesWithContextFunc: method is nil but resourcetaggingClient.GetTagKeysPagesWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetTagKeysInput
		In3 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool
		In4 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
		In4: in4,
	}
	lockresourcetaggingClientMockGetTagKeysPagesWithContext.Lock()
	mock.calls.GetTagKeysPagesWithContext = append(mock.calls.GetTagKeysPagesWithContext, callInfo)
	lockresourcetaggingClientMockGetTagKeysPagesWithContext.Unlock()
	return mock.GetTagKeysPagesWithContextFunc(in1, in2, in3, in4...)
}

// GetTagKeysPagesWithContextCalls gets all the calls that were made to GetTagKeysPagesWithContext.
// Check the length with:
//     len(mockedresourcetaggingClient.GetTagKeysPagesWithContextCalls())
func (mock *resourcetaggingClientMock) GetTagKeysPagesWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.GetTagKeysInput
	In3 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool
	In4 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetTagKeysInput
		In3 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool
		In4 []request.Option
	}
	lockresourcetaggingClientMockGetTagKeysPagesWithContext.RLock()
	calls = mock.calls.GetTagKeysPagesWithContext
	lockresourcetaggingClientMockGetTagKeysPagesWithContext.RUnlock()
	return calls
}

// GetTagKeysRequest calls GetTagKeysRequestFunc.
func (mock *resourcetaggingClientMock) GetTagKeysRequest(in1 *resourcegroupstaggingapi.GetTagKeysInput) (*request.Request, *resourcegroupstaggingapi.GetTagKeysOutput) {
	if mock.GetTagKeysRequestFunc == nil {
		panic("resourcetaggingClientMock.GetTagKeysRequestFunc: method is nil but resourcetaggingClient.GetTagKeysRequest was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetTagKeysInput
	}{
		In1: in1,
	}
	lockresourcetaggingClientMockGetTagKeysRequest.Lock()
	mock.calls.GetTagKeysRequest = append(mock.calls.GetTagKeysRequest, callInfo)
	lockresourcetaggingClientMockGetTagKeysRequest.Unlock()
	return mock.GetTagKeysRequestFunc(in1)
}

// GetTagKeysRequestCalls gets all the calls that were made to GetTagKeysRequest.
// Check the length with:
//     len(mockedresourcetaggingClient.GetTagKeysRequestCalls())
func (mock *resourcetaggingClientMock) GetTagKeysRequestCalls() []struct {
	In1 *resourcegroupstaggingapi.GetTagKeysInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetTagKeysInput
	}
	lockresourcetaggingClientMockGetTagKeysRequest.RLock()
	calls = mock.calls.GetTagKeysRequest
	lockresourcetaggingClientMockGetTagKeysRequest.RUnlock()
	return calls
}

// GetTagKeysWithContext calls GetTagKeysWithContextFunc.
func (mock *resourcetaggingClientMock) GetTagKeysWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagKeysInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetTagKeysOutput, error) {
	if mock.GetTagKeysWithContextFunc == nil {
		panic("resourcetaggingClientMock.GetTagKeysWithContextFunc: method is nil but resourcetaggingClient.GetTagKeysWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetTagKeysInput
		In3 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
	}
	lockresourcetaggingClientMockGetTagKeysWithContext.Lock()
	mock.calls.GetTagKeysWithContext = append(mock.calls.GetTagKeysWithContext, callInfo)
	lockresourcetaggingClientMockGetTagKeysWithContext.Unlock()
	return mock.GetTagKeysWithContextFunc(in1, in2, in3...)
}

// GetTagKeysWithContextCalls gets all the calls that were made to GetTagKeysWithContext.
// Check the length with:
//     len(mockedresourcetaggingClient.GetTagKeysWithContextCalls())
func (mock *resourcetaggingClientMock) GetTagKeysWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.GetTagKeysInput
	In3 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetTagKeysInput
		In3 []request.Option
	}
	lockresourcetaggingClientMockGetTagKeysWithContext.RLock()
	calls = mock.calls.GetTagKeysWithContext
	lockresourcetaggingClientMockGetTagKeysWithContext.RUnlock()
	return calls
}

// GetTagValues calls GetTagValuesFunc.
func (mock *resourcetaggingClientMock) GetTagValues(in1 *resourcegroupstaggingapi.GetTagValuesInput) (*resourcegroupstaggingapi.GetTagValuesOutput, error) {
	if mock.GetTagValuesFunc == nil {
		panic("resourcetaggingClientMock.GetTagValuesFunc: method is nil but resourcetaggingClient.GetTagValues was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetTagValuesInput
	}{
		In1: in1,
	}
	lockresourcetaggingClientMockGetTagValues.Lock()
	mock.calls.GetTagValues = append(mock.calls.GetTagValues, callInfo)
	lockresourcetaggingClientMockGetTagValues.Unlock()
	return mock.GetTagValuesFunc(in1)
}

// GetTagValuesCalls gets all the calls that were made to GetTagValues.
// Check the length with:
//     len(mockedresourcetaggingClient.GetTagValuesCalls())
func (mock *resourcetaggingClientMock) GetTagValuesCalls() []struct {
	In1 *resourcegroupstaggingapi.GetTagValuesInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetTagValuesInput
	}
	lockresourcetaggingClientMockGetTagValues.RLock()
	calls = mock.calls.GetTagValues
	lockresourcetaggingClientMockGetTagValues.RUnlock()
	return calls
}

// GetTagValuesPages calls GetTagValuesPagesFunc.
func (mock *resourcetaggingClientMock) GetTagValuesPages(in1 *resourcegroupstaggingapi.GetTagValuesInput, in2 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool) error {
	if mock.GetTagValuesPagesFunc == nil {
		panic("resourcetaggingClientMock.GetTagValuesPagesFunc: method is nil but resourcetaggingClient.GetTagValuesPages was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetTagValuesInput
		In2 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool
	}{
		In1: in1,
		In2: in2,
	}
	lockresourcetaggingClientMockGetTagValuesPages.Lock()
	mock.calls.GetTagValuesPages = append(mock.calls.GetTagValuesPages, callInfo)
	lockresourcetaggingClientMockGetTagValuesPages.Unlock()
	return mock.GetTagValuesPagesFunc(in1, in2)
}

// GetTagValuesPagesCalls gets all the calls that were made to GetTagValuesPages.
// Check the length with:
//     len(mockedresourcetaggingClient.GetTagValuesPagesCalls())
func (mock *resourcetaggingClientMock) GetTagValuesPagesCalls() []struct {
	In1 *resourcegroupstaggingapi.GetTagValuesInput
	In2 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetTagValuesInput
		In2 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool
	}
	lockresourcetaggingClientMockGetTagValuesPages.RLock()
	calls = mock.calls.GetTagValuesPages
	lockresourcetaggingClientMockGetTagValuesPages.RUnlock()
	return calls
}

// GetTagValuesPagesWithContext calls GetTagValuesPagesWithContextFunc.
func (mock *resourcetaggingClientMock) GetTagValuesPagesWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagValuesInput, in3 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool, in4 ...request.Option) error {
	if mock.GetTagValuesPagesWithContextFunc == nil {
		panic("resourcetaggingClientMock.GetTagValuesPagesWithContextFunc: method is nil but resourcetaggingClient.GetTagValuesPagesWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetTagValuesInput
		In3 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool
		In4 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
		In4: in4,
	}
	lockresourcetaggingClientMockGetTagValuesPagesWithContext.Lock()
	mock.calls.GetTagValuesPagesWithContext = append(mock.calls.GetTagValuesPagesWithContext, callInfo)
	lockresourcetaggingClientMockGetTagValuesPagesWithContext.Unlock()
	return mock.GetTagValuesPagesWithContextFunc(in1, in2, in3, in4...)
}

// GetTagValuesPagesWithContextCalls gets all the calls that were made to GetTagValuesPagesWithContext.
// Check the length with:
//     len(mockedresourcetaggingClient.GetTagValuesPagesWithContextCalls())
func (mock *resourcetaggingClientMock) GetTagValuesPagesWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.GetTagValuesInput
	In3 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool
	In4 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetTagValuesInput
		In3 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool
		In4 []request.Option
	}
	lockresourcetaggingClientMockGetTagValuesPagesWithContext.RLock()
	calls = mock.calls.GetTagValuesPagesWithContext
	lockresourcetaggingClientMockGetTagValuesPagesWithContext.RUnlock()
	return calls
}

// GetTagValuesRequest calls GetTagValuesRequestFunc.
func (mock *resourcetaggingClientMock) GetTagValuesRequest(in1 *resourcegroupstaggingapi.GetTagValuesInput) (*request.Request, *resourcegroupstaggingapi.GetTagValuesOutput) {
	if mock.GetTagValuesRequestFunc == nil {
		panic("resourcetaggingClientMock.GetTagValuesRequestFunc: method is nil but resourcetaggingClient.GetTagValuesRequest was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetTagValuesInput
	}{
		In1: in1,
	}
	lockresourcetaggingClientMockGetTagValuesRequest.Lock()
	mock.calls.GetTagValuesRequest = append(mock.calls.GetTagValuesRequest, callInfo)
	lockresourcetaggingClientMockGetTagValuesRequest.Unlock()
	return mock.GetTagValuesRequestFunc(in1)
}

// GetTagValuesRequestCalls gets all the calls that were made to GetTagValuesRequest.
// Check the length with:
//     len(mockedresourcetaggingClient.GetTagValuesRequestCalls())
func (mock *resourcetaggingClientMock) GetTagValuesRequestCalls() []struct {
	In1 *resourcegroupstaggingapi.GetTagValuesInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetTagValuesInput
	}
	lockresourcetaggingClientMockGetTagValuesRequest.RLock()
	calls = mock.calls.GetTagValuesRequest
	lockresourcetaggingClientMockGetTagValuesRequest.RUnlock()
	return calls
}

// GetTagValuesWithContext calls GetTagValuesWithContextFunc.
func (mock *resourcetaggingClientMock) GetTagValuesWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagValuesInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetTagValuesOutput, error) {
	if mock.GetTagValuesWithContextFunc == nil {
		panic("resourcetaggingClientMock.GetTagValuesWithContextFunc: method is nil but resourcetaggingClient.GetTagValuesWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetTagValuesInput
		In3 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
	}
	lockresourcetaggingClientMockGetTagValuesWithContext.Lock()
	mock.calls.GetTagValuesWithContext = append(mock.calls.GetTagValuesWithContext, callInfo)
	lockresourcetaggingClientMockGetTagValuesWithContext.Unlock()
	return mock.GetTagValuesWithContextFunc(in1, in2, in3...)
}

// GetTagValuesWithContextCalls gets all the calls that were made to GetTagValuesWithContext.
// Check the length with:
//     len(mockedresourcetaggingClient.GetTagValuesWithContextCalls())
func (mock *resourcetaggingClientMock) GetTagValuesWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.GetTagValuesInput
	In3 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetTagValuesInput
		In3 []request.Option
	}
	lockresourcetaggingClientMockGetTagValuesWithContext.RLock()
	calls = mock.calls.GetTagValuesWithContext
	lockresourcetaggingClientMockGetTagValuesWithContext.RUnlock()
	return calls
}

// StartReportCreation calls StartReportCreationFunc.
func (mock *resourcetaggingClientMock) StartReportCreation(in1 *resourcegroupstaggingapi.StartReportCreationInput) (*resourcegroupstaggingapi.StartReportCreationOutput, error) {
	if mock.StartReportCreationFunc == nil {
		panic("resourcetaggingClientMock.StartReportCreationFunc: method is nil but resourcetaggingClient.StartReportCreation was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.StartReportCreationInput
	}{
		In1: in1,
	}
	lockresourcetaggingClientMockStartReportCreation.Lock()
	mock.calls.StartReportCreation = append(mock.calls.StartReportCreation, callInfo)
	lockresourcetaggingClientMockStartReportCreation.Unlock()
	return mock.StartReportCreationFunc(in1)
}

// StartReportCreationCalls gets all the calls that were made to StartReportCreation.
// Check the length with:
//     len(mockedresourcetaggingClient.StartReportCreationCalls())
func (mock *resourcetaggingClientMock) StartReportCreationCalls() []struct {
	In1 *resourcegroupstaggingapi.StartReportCreationInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.StartReportCreationInput
	}
	lockresourcetaggingClientMockStartReportCreation.RLock()
	calls = mock.calls.StartReportCreation
	lockresourcetaggingClientMockStartReportCreation.RUnlock()
	return calls
}

// StartReportCreationRequest calls StartReportCreationRequestFunc.
func (mock *resourcetaggingClientMock) StartReportCreationRequest(in1 *resourcegroupstaggingapi.StartReportCreationInput) (*request.Request, *resourcegroupstaggingapi.StartReportCreationOutput) {
	if mock.StartReportCreationRequestFunc == nil {
		panic("resourcetaggingClientMock.StartReportCreationRequestFunc: method is nil but resourcetaggingClient.StartReportCreationRequest was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.StartReportCreationInput
	}{
		In1: in1,
	}
	lockresourcetaggingClientMockStartReportCreationRequest.Lock()
	mock.calls.StartReportCreationRequest = append(mock.calls.StartReportCreationRequest, callInfo)
	lockresourcetaggingClientMockStartReportCreationRequest.Unlock()
	return mock.StartReportCreationRequestFunc(in1)
}

// StartReportCreationRequestCalls gets all the calls that were made to StartReportCreationRequest.
// Check the length with:
//     len(mockedresourcetaggingClient.StartReportCreationRequestCalls())
func (mock *resourcetaggingClientMock) StartReportCreationRequestCalls() []struct {
	In1 *resourcegroupstaggingapi.StartReportCreationInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.StartReportCreationInput
	}
	lockresourcetaggingClientMockStartReportCreationRequest.RLock()
	calls = mock.calls.StartReportCreationRequest
	lockresourcetaggingClientMockStartReportCreationRequest.RUnlock()
	return calls
}

// StartReportCreationWithContext calls StartReportCreationWithContextFunc.
func (mock *resourcetaggingClientMock) StartReportCreationWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.StartReportCreationInput, in3 ...request.Option) (*resourcegroupstaggingapi.StartReportCreationOutput, error) {
	if mock.StartReportCreationWithContextFunc == nil {
		panic("resourcetaggingClientMock.StartReportCreationWithContextFunc: method is nil but resourcetaggingClient.StartReportCreationWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.StartReportCreationInput
		In3 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
	}
	lockresourcetaggingClientMockStartReportCreationWithContext.Lock()
	mock.calls.StartReportCreationWithContext = append(mock.calls.StartReportCreationWithContext, callInfo)
	lockresourcetaggingClientMockStartReportCreationWithContext.Unlock()
	return mock.StartReportCreationWithContextFunc(in1, in2, in3...)
}

// StartReportCreationWithContextCalls gets all the calls that were made to StartReportCreationWithContext.
// Check the length with:
//     len(mockedresourcetaggingClient.StartReportCreationWithContextCalls())
func (mock *resourcetaggingClientMock) StartReportCreationWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.StartReportCreationInput
	In3 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.StartReportCreationInput
		In3 []request.Option
	}
	lockresourcetaggingClientMockStartReportCreationWithContext.RLock()
	calls = mock.calls.StartReportCreationWithContext
	lockresourcetaggingClientMockStartReportCreationWithContext.RUnlock()
	return calls
}

// TagResources calls TagResourcesFunc.
func (mock *resourcetaggingClientMock) TagResources(in1 *resourcegroupstaggingapi.TagResourcesInput) (*resourcegroupstaggingapi.TagResourcesOutput, error) {
	if mock.TagResourcesFunc == nil {
		panic("resourcetaggingClientMock.TagResourcesFunc: method is nil but resourcetaggingClient.TagResources was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.TagResourcesInput
	}{
		In1: in1,
	}
	lockresourcetaggingClientMockTagResources.Lock()
	mock.calls.TagResources = append(mock.calls.TagResources, callInfo)
	lockresourcetaggingClientMockTagResources.Unlock()
	return mock.TagResourcesFunc(in1)
}

// TagResourcesCalls gets all the calls that were made to TagResources.
// Check the length with:
//     len(mockedresourcetaggingClient.TagResourcesCalls())
func (mock *resourcetaggingClientMock) TagResourcesCalls() []struct {
	In1 *resourcegroupstaggingapi.TagResourcesInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.TagResourcesInput
	}
	lockresourcetaggingClientMockTagResources.RLock()
	calls = mock.calls.TagResources
	lockresourcetaggingClientMockTagResources.RUnlock()
	return calls
}

// TagResourcesRequest calls TagResourcesRequestFunc.
func (mock *resourcetaggingClientMock) TagResourcesRequest(in1 *resourcegroupstaggingapi.TagResourcesInput) (*request.Request, *resourcegroupstaggingapi.TagResourcesOutput) {
	if mock.TagResourcesRequestFunc == nil {
		panic("resourcetaggingClientMock.TagResourcesRequestFunc: method is nil but resourcetaggingClient.TagResourcesRequest was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.TagResourcesInput
	}{
		In1: in1,
	}
	lockresourcetaggingClientMockTagResourcesRequest.Lock()
	mock.calls.TagResourcesRequest = append(mock.calls.TagResourcesRequest, callInfo)
	lockresourcetaggingClientMockTagResourcesRequest.Unlock()
	return mock.TagResourcesRequestFunc(in1)
}

// TagResourcesRequestCalls gets all the calls that were made to TagResourcesRequest.
// Check the length with:
//     len(mockedresourcetaggingClient.TagResourcesRequestCalls())
func (mock *resourcetaggingClientMock) TagResourcesRequestCalls() []struct {
	In1 *resourcegroupstaggingapi.TagResourcesInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.TagResourcesInput
	}
	lockresourcetaggingClientMockTagResourcesRequest.RLock()
	calls = mock.calls.TagResourcesRequest
	lockresourcetaggingClientMockTagResourcesRequest.RUnlock()
	return calls
}

// TagResourcesWithContext calls TagResourcesWithContextFunc.
func (mock *resourcetaggingClientMock) TagResourcesWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.TagResourcesInput, in3 ...request.Option) (*resourcegroupstaggingapi.TagResourcesOutput, error) {
	if mock.TagResourcesWithContextFunc == nil {
		panic("resourcetaggingClientMock.TagResourcesWithContextFunc: method is nil but resourcetaggingClient.TagResourcesWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.TagResourcesInput
		In3 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
	}
	lockresourcetaggingClientMockTagResourcesWithContext.Lock()
	mock.calls.TagResourcesWithContext = append(mock.calls.TagResourcesWithContext, callInfo)
	lockresourcetaggingClientMockTagResourcesWithContext.Unlock()
	return mock.TagResourcesWithContextFunc(in1, in2, in3...)
}

// TagResourcesWithContextCalls gets all the calls that were made to TagResourcesWithContext.
// Check the length with:
//     len(mockedresourcetaggingClient.TagResourcesWithContextCalls())
func (mock *resourcetaggingClientMock) TagResourcesWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.TagResourcesInput
	In3 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.TagResourcesInput
		In3 []request.Option
	}
	lockresourcetaggingClientMockTagResourcesWithContext.RLock()
	calls = mock.calls.TagResourcesWithContext
	lockresourcetaggingClientMockTagResourcesWithContext.RUnlock()
	return calls
}

// UntagResources calls UntagResourcesFunc.
func (mock *resourcetaggingClientMock) UntagResources(in1 *resourcegroupstaggingapi.UntagResourcesInput) (*resourcegroupstaggingapi.UntagResourcesOutput, error) {
	if mock.UntagResourcesFunc == nil {
		panic("resourcetaggingClientMock.UntagResourcesFunc: method is nil but resourcetaggingClient.UntagResources was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.UntagResourcesInput
	}{
		In1: in1,
	}
	lockresourcetaggingClientMockUntagResources.Lock()
	mock.calls.UntagResources = append(mock.calls.UntagResources, callInfo)
	lockresourcetaggingClientMockUntagResources.Unlock()
	return mock.UntagResourcesFunc(in1)
}

// UntagResourcesCalls gets all the calls that were made to UntagResources.
// Check the length with:
//     len(mockedresourcetaggingClient.UntagResourcesCalls())
func (mock *resourcetaggingClientMock) UntagResourcesCalls() []struct {
	In1 *resourcegroupstaggingapi.UntagResourcesInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.UntagResourcesInput
	}
	lockresourcetaggingClientMockUntagResources.RLock()
	calls = mock.calls.UntagResources
	lockresourcetaggingClientMockUntagResources.RUnlock()
	return calls
}

// UntagResourcesRequest calls UntagResourcesRequestFunc.
func (mock *resourcetaggingClientMock) UntagResourcesRequest(in1 *resourcegroupstaggingapi.UntagResourcesInput) (*request.Request, *resourcegroupstaggingapi.UntagResourcesOutput) {
	if mock.UntagResourcesRequestFunc == nil {
		panic("resourcetaggingClientMock.UntagResourcesRequestFunc: method is nil but resourcetaggingClient.UntagResourcesRequest was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.UntagResourcesInput
	}{
		In1: in1,
	}
	lockresourcetaggingClientMockUntagResourcesRequest.Lock()
	mock.calls.UntagResourcesRequest = append(mock.calls.UntagResourcesRequest, callInfo)
	lockresourcetaggingClientMockUntagResourcesRequest.Unlock()
	return mock.UntagResourcesRequestFunc(in1)
}

// UntagResourcesRequestCalls gets all the calls that were made to UntagResourcesRequest.
// Check the length with:
//     len(mockedresourcetaggingClient.UntagResourcesRequestCalls())
func (mock *resourcetaggingClientMock) UntagResourcesRequestCalls() []struct {
	In1 *resourcegroupstaggingapi.UntagResourcesInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.UntagResourcesInput
	}
	lockresourcetaggingClientMockUntagResourcesRequest.RLock()
	calls = mock.calls.UntagResourcesRequest
	lockresourcetaggingClientMockUntagResourcesRequest.RUnlock()
	return calls
}

// UntagResourcesWithContext calls UntagResourcesWithContextFunc.
func (mock *resourcetaggingClientMock) UntagResourcesWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.UntagResourcesInput, in3 ...request.Option) (*resourcegroupstaggingapi.UntagResourcesOutput, error) {
	if mock.UntagResourcesWithContextFunc == nil {
		panic("resourcetaggingClientMock.UntagResourcesWithContextFunc: method is nil but resourcetaggingClient.UntagResourcesWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.UntagResourcesInput
		In3 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
	}
	lockresourcetaggingClientMockUntagResourcesWithContext.Lock()
	mock.calls.UntagResourcesWithContext = append(mock.calls.UntagResourcesWithContext, callInfo)
	lockresourcetaggingClientMockUntagResourcesWithContext.Unlock()
	return mock.UntagResourcesWithContextFunc(in1, in2, in3...)
}

// UntagResourcesWithContextCalls gets all the calls that were made to UntagResourcesWithContext.
// Check the length with:
//     len(mockedresourcetaggingClient.UntagResourcesWithContextCalls())
func (mock *resourcetaggingClientMock) UntagResourcesWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.UntagResourcesInput
	In3 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.UntagResourcesInput
		In3 []request.Option
	}
	lockresourcetaggingClientMockUntagResourcesWithContext.RLock()
	calls = mock.calls.UntagResourcesWithContext
	lockresourcetaggingClientMockUntagResourcesWithContext.RUnlock()
	return calls
}
