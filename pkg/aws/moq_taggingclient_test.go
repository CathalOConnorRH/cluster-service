// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package aws

import (
	"context"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/resourcegroupstaggingapi"
	"sync"
)

var (
	locktaggingClientMockDescribeReportCreation               sync.RWMutex
	locktaggingClientMockDescribeReportCreationRequest        sync.RWMutex
	locktaggingClientMockDescribeReportCreationWithContext    sync.RWMutex
	locktaggingClientMockGetComplianceSummary                 sync.RWMutex
	locktaggingClientMockGetComplianceSummaryPages            sync.RWMutex
	locktaggingClientMockGetComplianceSummaryPagesWithContext sync.RWMutex
	locktaggingClientMockGetComplianceSummaryRequest          sync.RWMutex
	locktaggingClientMockGetComplianceSummaryWithContext      sync.RWMutex
	locktaggingClientMockGetResources                         sync.RWMutex
	locktaggingClientMockGetResourcesPages                    sync.RWMutex
	locktaggingClientMockGetResourcesPagesWithContext         sync.RWMutex
	locktaggingClientMockGetResourcesRequest                  sync.RWMutex
	locktaggingClientMockGetResourcesWithContext              sync.RWMutex
	locktaggingClientMockGetTagKeys                           sync.RWMutex
	locktaggingClientMockGetTagKeysPages                      sync.RWMutex
	locktaggingClientMockGetTagKeysPagesWithContext           sync.RWMutex
	locktaggingClientMockGetTagKeysRequest                    sync.RWMutex
	locktaggingClientMockGetTagKeysWithContext                sync.RWMutex
	locktaggingClientMockGetTagValues                         sync.RWMutex
	locktaggingClientMockGetTagValuesPages                    sync.RWMutex
	locktaggingClientMockGetTagValuesPagesWithContext         sync.RWMutex
	locktaggingClientMockGetTagValuesRequest                  sync.RWMutex
	locktaggingClientMockGetTagValuesWithContext              sync.RWMutex
	locktaggingClientMockStartReportCreation                  sync.RWMutex
	locktaggingClientMockStartReportCreationRequest           sync.RWMutex
	locktaggingClientMockStartReportCreationWithContext       sync.RWMutex
	locktaggingClientMockTagResources                         sync.RWMutex
	locktaggingClientMockTagResourcesRequest                  sync.RWMutex
	locktaggingClientMockTagResourcesWithContext              sync.RWMutex
	locktaggingClientMockUntagResources                       sync.RWMutex
	locktaggingClientMockUntagResourcesRequest                sync.RWMutex
	locktaggingClientMockUntagResourcesWithContext            sync.RWMutex
)

// Ensure, that taggingClientMock does implement taggingClient.
// If this is not the case, regenerate this file with moq.
var _ taggingClient = &taggingClientMock{}

// taggingClientMock is a mock implementation of taggingClient.
//
//     func TestSomethingThatUsestaggingClient(t *testing.T) {
//
//         // make and configure a mocked taggingClient
//         mockedtaggingClient := &taggingClientMock{
//             DescribeReportCreationFunc: func(in1 *resourcegroupstaggingapi.DescribeReportCreationInput) (*resourcegroupstaggingapi.DescribeReportCreationOutput, error) {
// 	               panic("mock out the DescribeReportCreation method")
//             },
//             DescribeReportCreationRequestFunc: func(in1 *resourcegroupstaggingapi.DescribeReportCreationInput) (*request.Request, *resourcegroupstaggingapi.DescribeReportCreationOutput) {
// 	               panic("mock out the DescribeReportCreationRequest method")
//             },
//             DescribeReportCreationWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.DescribeReportCreationInput, in3 ...request.Option) (*resourcegroupstaggingapi.DescribeReportCreationOutput, error) {
// 	               panic("mock out the DescribeReportCreationWithContext method")
//             },
//             GetComplianceSummaryFunc: func(in1 *resourcegroupstaggingapi.GetComplianceSummaryInput) (*resourcegroupstaggingapi.GetComplianceSummaryOutput, error) {
// 	               panic("mock out the GetComplianceSummary method")
//             },
//             GetComplianceSummaryPagesFunc: func(in1 *resourcegroupstaggingapi.GetComplianceSummaryInput, in2 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool) error {
// 	               panic("mock out the GetComplianceSummaryPages method")
//             },
//             GetComplianceSummaryPagesWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.GetComplianceSummaryInput, in3 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool, in4 ...request.Option) error {
// 	               panic("mock out the GetComplianceSummaryPagesWithContext method")
//             },
//             GetComplianceSummaryRequestFunc: func(in1 *resourcegroupstaggingapi.GetComplianceSummaryInput) (*request.Request, *resourcegroupstaggingapi.GetComplianceSummaryOutput) {
// 	               panic("mock out the GetComplianceSummaryRequest method")
//             },
//             GetComplianceSummaryWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.GetComplianceSummaryInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetComplianceSummaryOutput, error) {
// 	               panic("mock out the GetComplianceSummaryWithContext method")
//             },
//             GetResourcesFunc: func(in1 *resourcegroupstaggingapi.GetResourcesInput) (*resourcegroupstaggingapi.GetResourcesOutput, error) {
// 	               panic("mock out the GetResources method")
//             },
//             GetResourcesPagesFunc: func(in1 *resourcegroupstaggingapi.GetResourcesInput, in2 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool) error {
// 	               panic("mock out the GetResourcesPages method")
//             },
//             GetResourcesPagesWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.GetResourcesInput, in3 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool, in4 ...request.Option) error {
// 	               panic("mock out the GetResourcesPagesWithContext method")
//             },
//             GetResourcesRequestFunc: func(in1 *resourcegroupstaggingapi.GetResourcesInput) (*request.Request, *resourcegroupstaggingapi.GetResourcesOutput) {
// 	               panic("mock out the GetResourcesRequest method")
//             },
//             GetResourcesWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.GetResourcesInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetResourcesOutput, error) {
// 	               panic("mock out the GetResourcesWithContext method")
//             },
//             GetTagKeysFunc: func(in1 *resourcegroupstaggingapi.GetTagKeysInput) (*resourcegroupstaggingapi.GetTagKeysOutput, error) {
// 	               panic("mock out the GetTagKeys method")
//             },
//             GetTagKeysPagesFunc: func(in1 *resourcegroupstaggingapi.GetTagKeysInput, in2 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool) error {
// 	               panic("mock out the GetTagKeysPages method")
//             },
//             GetTagKeysPagesWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagKeysInput, in3 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool, in4 ...request.Option) error {
// 	               panic("mock out the GetTagKeysPagesWithContext method")
//             },
//             GetTagKeysRequestFunc: func(in1 *resourcegroupstaggingapi.GetTagKeysInput) (*request.Request, *resourcegroupstaggingapi.GetTagKeysOutput) {
// 	               panic("mock out the GetTagKeysRequest method")
//             },
//             GetTagKeysWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagKeysInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetTagKeysOutput, error) {
// 	               panic("mock out the GetTagKeysWithContext method")
//             },
//             GetTagValuesFunc: func(in1 *resourcegroupstaggingapi.GetTagValuesInput) (*resourcegroupstaggingapi.GetTagValuesOutput, error) {
// 	               panic("mock out the GetTagValues method")
//             },
//             GetTagValuesPagesFunc: func(in1 *resourcegroupstaggingapi.GetTagValuesInput, in2 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool) error {
// 	               panic("mock out the GetTagValuesPages method")
//             },
//             GetTagValuesPagesWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagValuesInput, in3 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool, in4 ...request.Option) error {
// 	               panic("mock out the GetTagValuesPagesWithContext method")
//             },
//             GetTagValuesRequestFunc: func(in1 *resourcegroupstaggingapi.GetTagValuesInput) (*request.Request, *resourcegroupstaggingapi.GetTagValuesOutput) {
// 	               panic("mock out the GetTagValuesRequest method")
//             },
//             GetTagValuesWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagValuesInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetTagValuesOutput, error) {
// 	               panic("mock out the GetTagValuesWithContext method")
//             },
//             StartReportCreationFunc: func(in1 *resourcegroupstaggingapi.StartReportCreationInput) (*resourcegroupstaggingapi.StartReportCreationOutput, error) {
// 	               panic("mock out the StartReportCreation method")
//             },
//             StartReportCreationRequestFunc: func(in1 *resourcegroupstaggingapi.StartReportCreationInput) (*request.Request, *resourcegroupstaggingapi.StartReportCreationOutput) {
// 	               panic("mock out the StartReportCreationRequest method")
//             },
//             StartReportCreationWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.StartReportCreationInput, in3 ...request.Option) (*resourcegroupstaggingapi.StartReportCreationOutput, error) {
// 	               panic("mock out the StartReportCreationWithContext method")
//             },
//             TagResourcesFunc: func(in1 *resourcegroupstaggingapi.TagResourcesInput) (*resourcegroupstaggingapi.TagResourcesOutput, error) {
// 	               panic("mock out the TagResources method")
//             },
//             TagResourcesRequestFunc: func(in1 *resourcegroupstaggingapi.TagResourcesInput) (*request.Request, *resourcegroupstaggingapi.TagResourcesOutput) {
// 	               panic("mock out the TagResourcesRequest method")
//             },
//             TagResourcesWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.TagResourcesInput, in3 ...request.Option) (*resourcegroupstaggingapi.TagResourcesOutput, error) {
// 	               panic("mock out the TagResourcesWithContext method")
//             },
//             UntagResourcesFunc: func(in1 *resourcegroupstaggingapi.UntagResourcesInput) (*resourcegroupstaggingapi.UntagResourcesOutput, error) {
// 	               panic("mock out the UntagResources method")
//             },
//             UntagResourcesRequestFunc: func(in1 *resourcegroupstaggingapi.UntagResourcesInput) (*request.Request, *resourcegroupstaggingapi.UntagResourcesOutput) {
// 	               panic("mock out the UntagResourcesRequest method")
//             },
//             UntagResourcesWithContextFunc: func(in1 context.Context, in2 *resourcegroupstaggingapi.UntagResourcesInput, in3 ...request.Option) (*resourcegroupstaggingapi.UntagResourcesOutput, error) {
// 	               panic("mock out the UntagResourcesWithContext method")
//             },
//         }
//
//         // use mockedtaggingClient in code that requires taggingClient
//         // and then make assertions.
//
//     }
type taggingClientMock struct {
	// DescribeReportCreationFunc mocks the DescribeReportCreation method.
	DescribeReportCreationFunc func(in1 *resourcegroupstaggingapi.DescribeReportCreationInput) (*resourcegroupstaggingapi.DescribeReportCreationOutput, error)

	// DescribeReportCreationRequestFunc mocks the DescribeReportCreationRequest method.
	DescribeReportCreationRequestFunc func(in1 *resourcegroupstaggingapi.DescribeReportCreationInput) (*request.Request, *resourcegroupstaggingapi.DescribeReportCreationOutput)

	// DescribeReportCreationWithContextFunc mocks the DescribeReportCreationWithContext method.
	DescribeReportCreationWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.DescribeReportCreationInput, in3 ...request.Option) (*resourcegroupstaggingapi.DescribeReportCreationOutput, error)

	// GetComplianceSummaryFunc mocks the GetComplianceSummary method.
	GetComplianceSummaryFunc func(in1 *resourcegroupstaggingapi.GetComplianceSummaryInput) (*resourcegroupstaggingapi.GetComplianceSummaryOutput, error)

	// GetComplianceSummaryPagesFunc mocks the GetComplianceSummaryPages method.
	GetComplianceSummaryPagesFunc func(in1 *resourcegroupstaggingapi.GetComplianceSummaryInput, in2 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool) error

	// GetComplianceSummaryPagesWithContextFunc mocks the GetComplianceSummaryPagesWithContext method.
	GetComplianceSummaryPagesWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.GetComplianceSummaryInput, in3 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool, in4 ...request.Option) error

	// GetComplianceSummaryRequestFunc mocks the GetComplianceSummaryRequest method.
	GetComplianceSummaryRequestFunc func(in1 *resourcegroupstaggingapi.GetComplianceSummaryInput) (*request.Request, *resourcegroupstaggingapi.GetComplianceSummaryOutput)

	// GetComplianceSummaryWithContextFunc mocks the GetComplianceSummaryWithContext method.
	GetComplianceSummaryWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.GetComplianceSummaryInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetComplianceSummaryOutput, error)

	// GetResourcesFunc mocks the GetResources method.
	GetResourcesFunc func(in1 *resourcegroupstaggingapi.GetResourcesInput) (*resourcegroupstaggingapi.GetResourcesOutput, error)

	// GetResourcesPagesFunc mocks the GetResourcesPages method.
	GetResourcesPagesFunc func(in1 *resourcegroupstaggingapi.GetResourcesInput, in2 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool) error

	// GetResourcesPagesWithContextFunc mocks the GetResourcesPagesWithContext method.
	GetResourcesPagesWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.GetResourcesInput, in3 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool, in4 ...request.Option) error

	// GetResourcesRequestFunc mocks the GetResourcesRequest method.
	GetResourcesRequestFunc func(in1 *resourcegroupstaggingapi.GetResourcesInput) (*request.Request, *resourcegroupstaggingapi.GetResourcesOutput)

	// GetResourcesWithContextFunc mocks the GetResourcesWithContext method.
	GetResourcesWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.GetResourcesInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetResourcesOutput, error)

	// GetTagKeysFunc mocks the GetTagKeys method.
	GetTagKeysFunc func(in1 *resourcegroupstaggingapi.GetTagKeysInput) (*resourcegroupstaggingapi.GetTagKeysOutput, error)

	// GetTagKeysPagesFunc mocks the GetTagKeysPages method.
	GetTagKeysPagesFunc func(in1 *resourcegroupstaggingapi.GetTagKeysInput, in2 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool) error

	// GetTagKeysPagesWithContextFunc mocks the GetTagKeysPagesWithContext method.
	GetTagKeysPagesWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagKeysInput, in3 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool, in4 ...request.Option) error

	// GetTagKeysRequestFunc mocks the GetTagKeysRequest method.
	GetTagKeysRequestFunc func(in1 *resourcegroupstaggingapi.GetTagKeysInput) (*request.Request, *resourcegroupstaggingapi.GetTagKeysOutput)

	// GetTagKeysWithContextFunc mocks the GetTagKeysWithContext method.
	GetTagKeysWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagKeysInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetTagKeysOutput, error)

	// GetTagValuesFunc mocks the GetTagValues method.
	GetTagValuesFunc func(in1 *resourcegroupstaggingapi.GetTagValuesInput) (*resourcegroupstaggingapi.GetTagValuesOutput, error)

	// GetTagValuesPagesFunc mocks the GetTagValuesPages method.
	GetTagValuesPagesFunc func(in1 *resourcegroupstaggingapi.GetTagValuesInput, in2 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool) error

	// GetTagValuesPagesWithContextFunc mocks the GetTagValuesPagesWithContext method.
	GetTagValuesPagesWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagValuesInput, in3 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool, in4 ...request.Option) error

	// GetTagValuesRequestFunc mocks the GetTagValuesRequest method.
	GetTagValuesRequestFunc func(in1 *resourcegroupstaggingapi.GetTagValuesInput) (*request.Request, *resourcegroupstaggingapi.GetTagValuesOutput)

	// GetTagValuesWithContextFunc mocks the GetTagValuesWithContext method.
	GetTagValuesWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagValuesInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetTagValuesOutput, error)

	// StartReportCreationFunc mocks the StartReportCreation method.
	StartReportCreationFunc func(in1 *resourcegroupstaggingapi.StartReportCreationInput) (*resourcegroupstaggingapi.StartReportCreationOutput, error)

	// StartReportCreationRequestFunc mocks the StartReportCreationRequest method.
	StartReportCreationRequestFunc func(in1 *resourcegroupstaggingapi.StartReportCreationInput) (*request.Request, *resourcegroupstaggingapi.StartReportCreationOutput)

	// StartReportCreationWithContextFunc mocks the StartReportCreationWithContext method.
	StartReportCreationWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.StartReportCreationInput, in3 ...request.Option) (*resourcegroupstaggingapi.StartReportCreationOutput, error)

	// TagResourcesFunc mocks the TagResources method.
	TagResourcesFunc func(in1 *resourcegroupstaggingapi.TagResourcesInput) (*resourcegroupstaggingapi.TagResourcesOutput, error)

	// TagResourcesRequestFunc mocks the TagResourcesRequest method.
	TagResourcesRequestFunc func(in1 *resourcegroupstaggingapi.TagResourcesInput) (*request.Request, *resourcegroupstaggingapi.TagResourcesOutput)

	// TagResourcesWithContextFunc mocks the TagResourcesWithContext method.
	TagResourcesWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.TagResourcesInput, in3 ...request.Option) (*resourcegroupstaggingapi.TagResourcesOutput, error)

	// UntagResourcesFunc mocks the UntagResources method.
	UntagResourcesFunc func(in1 *resourcegroupstaggingapi.UntagResourcesInput) (*resourcegroupstaggingapi.UntagResourcesOutput, error)

	// UntagResourcesRequestFunc mocks the UntagResourcesRequest method.
	UntagResourcesRequestFunc func(in1 *resourcegroupstaggingapi.UntagResourcesInput) (*request.Request, *resourcegroupstaggingapi.UntagResourcesOutput)

	// UntagResourcesWithContextFunc mocks the UntagResourcesWithContext method.
	UntagResourcesWithContextFunc func(in1 context.Context, in2 *resourcegroupstaggingapi.UntagResourcesInput, in3 ...request.Option) (*resourcegroupstaggingapi.UntagResourcesOutput, error)

	// calls tracks calls to the methods.
	calls struct {
		// DescribeReportCreation holds details about calls to the DescribeReportCreation method.
		DescribeReportCreation []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.DescribeReportCreationInput
		}
		// DescribeReportCreationRequest holds details about calls to the DescribeReportCreationRequest method.
		DescribeReportCreationRequest []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.DescribeReportCreationInput
		}
		// DescribeReportCreationWithContext holds details about calls to the DescribeReportCreationWithContext method.
		DescribeReportCreationWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.DescribeReportCreationInput
			// In3 is the in3 argument value.
			In3 []request.Option
		}
		// GetComplianceSummary holds details about calls to the GetComplianceSummary method.
		GetComplianceSummary []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
		}
		// GetComplianceSummaryPages holds details about calls to the GetComplianceSummaryPages method.
		GetComplianceSummaryPages []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
			// In2 is the in2 argument value.
			In2 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool
		}
		// GetComplianceSummaryPagesWithContext holds details about calls to the GetComplianceSummaryPagesWithContext method.
		GetComplianceSummaryPagesWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.GetComplianceSummaryInput
			// In3 is the in3 argument value.
			In3 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool
			// In4 is the in4 argument value.
			In4 []request.Option
		}
		// GetComplianceSummaryRequest holds details about calls to the GetComplianceSummaryRequest method.
		GetComplianceSummaryRequest []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
		}
		// GetComplianceSummaryWithContext holds details about calls to the GetComplianceSummaryWithContext method.
		GetComplianceSummaryWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.GetComplianceSummaryInput
			// In3 is the in3 argument value.
			In3 []request.Option
		}
		// GetResources holds details about calls to the GetResources method.
		GetResources []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetResourcesInput
		}
		// GetResourcesPages holds details about calls to the GetResourcesPages method.
		GetResourcesPages []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetResourcesInput
			// In2 is the in2 argument value.
			In2 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool
		}
		// GetResourcesPagesWithContext holds details about calls to the GetResourcesPagesWithContext method.
		GetResourcesPagesWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.GetResourcesInput
			// In3 is the in3 argument value.
			In3 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool
			// In4 is the in4 argument value.
			In4 []request.Option
		}
		// GetResourcesRequest holds details about calls to the GetResourcesRequest method.
		GetResourcesRequest []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetResourcesInput
		}
		// GetResourcesWithContext holds details about calls to the GetResourcesWithContext method.
		GetResourcesWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.GetResourcesInput
			// In3 is the in3 argument value.
			In3 []request.Option
		}
		// GetTagKeys holds details about calls to the GetTagKeys method.
		GetTagKeys []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetTagKeysInput
		}
		// GetTagKeysPages holds details about calls to the GetTagKeysPages method.
		GetTagKeysPages []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetTagKeysInput
			// In2 is the in2 argument value.
			In2 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool
		}
		// GetTagKeysPagesWithContext holds details about calls to the GetTagKeysPagesWithContext method.
		GetTagKeysPagesWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.GetTagKeysInput
			// In3 is the in3 argument value.
			In3 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool
			// In4 is the in4 argument value.
			In4 []request.Option
		}
		// GetTagKeysRequest holds details about calls to the GetTagKeysRequest method.
		GetTagKeysRequest []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetTagKeysInput
		}
		// GetTagKeysWithContext holds details about calls to the GetTagKeysWithContext method.
		GetTagKeysWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.GetTagKeysInput
			// In3 is the in3 argument value.
			In3 []request.Option
		}
		// GetTagValues holds details about calls to the GetTagValues method.
		GetTagValues []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetTagValuesInput
		}
		// GetTagValuesPages holds details about calls to the GetTagValuesPages method.
		GetTagValuesPages []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetTagValuesInput
			// In2 is the in2 argument value.
			In2 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool
		}
		// GetTagValuesPagesWithContext holds details about calls to the GetTagValuesPagesWithContext method.
		GetTagValuesPagesWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.GetTagValuesInput
			// In3 is the in3 argument value.
			In3 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool
			// In4 is the in4 argument value.
			In4 []request.Option
		}
		// GetTagValuesRequest holds details about calls to the GetTagValuesRequest method.
		GetTagValuesRequest []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.GetTagValuesInput
		}
		// GetTagValuesWithContext holds details about calls to the GetTagValuesWithContext method.
		GetTagValuesWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.GetTagValuesInput
			// In3 is the in3 argument value.
			In3 []request.Option
		}
		// StartReportCreation holds details about calls to the StartReportCreation method.
		StartReportCreation []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.StartReportCreationInput
		}
		// StartReportCreationRequest holds details about calls to the StartReportCreationRequest method.
		StartReportCreationRequest []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.StartReportCreationInput
		}
		// StartReportCreationWithContext holds details about calls to the StartReportCreationWithContext method.
		StartReportCreationWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.StartReportCreationInput
			// In3 is the in3 argument value.
			In3 []request.Option
		}
		// TagResources holds details about calls to the TagResources method.
		TagResources []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.TagResourcesInput
		}
		// TagResourcesRequest holds details about calls to the TagResourcesRequest method.
		TagResourcesRequest []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.TagResourcesInput
		}
		// TagResourcesWithContext holds details about calls to the TagResourcesWithContext method.
		TagResourcesWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.TagResourcesInput
			// In3 is the in3 argument value.
			In3 []request.Option
		}
		// UntagResources holds details about calls to the UntagResources method.
		UntagResources []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.UntagResourcesInput
		}
		// UntagResourcesRequest holds details about calls to the UntagResourcesRequest method.
		UntagResourcesRequest []struct {
			// In1 is the in1 argument value.
			In1 *resourcegroupstaggingapi.UntagResourcesInput
		}
		// UntagResourcesWithContext holds details about calls to the UntagResourcesWithContext method.
		UntagResourcesWithContext []struct {
			// In1 is the in1 argument value.
			In1 context.Context
			// In2 is the in2 argument value.
			In2 *resourcegroupstaggingapi.UntagResourcesInput
			// In3 is the in3 argument value.
			In3 []request.Option
		}
	}
}

// DescribeReportCreation calls DescribeReportCreationFunc.
func (mock *taggingClientMock) DescribeReportCreation(in1 *resourcegroupstaggingapi.DescribeReportCreationInput) (*resourcegroupstaggingapi.DescribeReportCreationOutput, error) {
	if mock.DescribeReportCreationFunc == nil {
		panic("taggingClientMock.DescribeReportCreationFunc: method is nil but taggingClient.DescribeReportCreation was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.DescribeReportCreationInput
	}{
		In1: in1,
	}
	locktaggingClientMockDescribeReportCreation.Lock()
	mock.calls.DescribeReportCreation = append(mock.calls.DescribeReportCreation, callInfo)
	locktaggingClientMockDescribeReportCreation.Unlock()
	return mock.DescribeReportCreationFunc(in1)
}

// DescribeReportCreationCalls gets all the calls that were made to DescribeReportCreation.
// Check the length with:
//     len(mockedtaggingClient.DescribeReportCreationCalls())
func (mock *taggingClientMock) DescribeReportCreationCalls() []struct {
	In1 *resourcegroupstaggingapi.DescribeReportCreationInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.DescribeReportCreationInput
	}
	locktaggingClientMockDescribeReportCreation.RLock()
	calls = mock.calls.DescribeReportCreation
	locktaggingClientMockDescribeReportCreation.RUnlock()
	return calls
}

// DescribeReportCreationRequest calls DescribeReportCreationRequestFunc.
func (mock *taggingClientMock) DescribeReportCreationRequest(in1 *resourcegroupstaggingapi.DescribeReportCreationInput) (*request.Request, *resourcegroupstaggingapi.DescribeReportCreationOutput) {
	if mock.DescribeReportCreationRequestFunc == nil {
		panic("taggingClientMock.DescribeReportCreationRequestFunc: method is nil but taggingClient.DescribeReportCreationRequest was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.DescribeReportCreationInput
	}{
		In1: in1,
	}
	locktaggingClientMockDescribeReportCreationRequest.Lock()
	mock.calls.DescribeReportCreationRequest = append(mock.calls.DescribeReportCreationRequest, callInfo)
	locktaggingClientMockDescribeReportCreationRequest.Unlock()
	return mock.DescribeReportCreationRequestFunc(in1)
}

// DescribeReportCreationRequestCalls gets all the calls that were made to DescribeReportCreationRequest.
// Check the length with:
//     len(mockedtaggingClient.DescribeReportCreationRequestCalls())
func (mock *taggingClientMock) DescribeReportCreationRequestCalls() []struct {
	In1 *resourcegroupstaggingapi.DescribeReportCreationInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.DescribeReportCreationInput
	}
	locktaggingClientMockDescribeReportCreationRequest.RLock()
	calls = mock.calls.DescribeReportCreationRequest
	locktaggingClientMockDescribeReportCreationRequest.RUnlock()
	return calls
}

// DescribeReportCreationWithContext calls DescribeReportCreationWithContextFunc.
func (mock *taggingClientMock) DescribeReportCreationWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.DescribeReportCreationInput, in3 ...request.Option) (*resourcegroupstaggingapi.DescribeReportCreationOutput, error) {
	if mock.DescribeReportCreationWithContextFunc == nil {
		panic("taggingClientMock.DescribeReportCreationWithContextFunc: method is nil but taggingClient.DescribeReportCreationWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.DescribeReportCreationInput
		In3 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
	}
	locktaggingClientMockDescribeReportCreationWithContext.Lock()
	mock.calls.DescribeReportCreationWithContext = append(mock.calls.DescribeReportCreationWithContext, callInfo)
	locktaggingClientMockDescribeReportCreationWithContext.Unlock()
	return mock.DescribeReportCreationWithContextFunc(in1, in2, in3...)
}

// DescribeReportCreationWithContextCalls gets all the calls that were made to DescribeReportCreationWithContext.
// Check the length with:
//     len(mockedtaggingClient.DescribeReportCreationWithContextCalls())
func (mock *taggingClientMock) DescribeReportCreationWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.DescribeReportCreationInput
	In3 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.DescribeReportCreationInput
		In3 []request.Option
	}
	locktaggingClientMockDescribeReportCreationWithContext.RLock()
	calls = mock.calls.DescribeReportCreationWithContext
	locktaggingClientMockDescribeReportCreationWithContext.RUnlock()
	return calls
}

// GetComplianceSummary calls GetComplianceSummaryFunc.
func (mock *taggingClientMock) GetComplianceSummary(in1 *resourcegroupstaggingapi.GetComplianceSummaryInput) (*resourcegroupstaggingapi.GetComplianceSummaryOutput, error) {
	if mock.GetComplianceSummaryFunc == nil {
		panic("taggingClientMock.GetComplianceSummaryFunc: method is nil but taggingClient.GetComplianceSummary was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
	}{
		In1: in1,
	}
	locktaggingClientMockGetComplianceSummary.Lock()
	mock.calls.GetComplianceSummary = append(mock.calls.GetComplianceSummary, callInfo)
	locktaggingClientMockGetComplianceSummary.Unlock()
	return mock.GetComplianceSummaryFunc(in1)
}

// GetComplianceSummaryCalls gets all the calls that were made to GetComplianceSummary.
// Check the length with:
//     len(mockedtaggingClient.GetComplianceSummaryCalls())
func (mock *taggingClientMock) GetComplianceSummaryCalls() []struct {
	In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
	}
	locktaggingClientMockGetComplianceSummary.RLock()
	calls = mock.calls.GetComplianceSummary
	locktaggingClientMockGetComplianceSummary.RUnlock()
	return calls
}

// GetComplianceSummaryPages calls GetComplianceSummaryPagesFunc.
func (mock *taggingClientMock) GetComplianceSummaryPages(in1 *resourcegroupstaggingapi.GetComplianceSummaryInput, in2 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool) error {
	if mock.GetComplianceSummaryPagesFunc == nil {
		panic("taggingClientMock.GetComplianceSummaryPagesFunc: method is nil but taggingClient.GetComplianceSummaryPages was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
		In2 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool
	}{
		In1: in1,
		In2: in2,
	}
	locktaggingClientMockGetComplianceSummaryPages.Lock()
	mock.calls.GetComplianceSummaryPages = append(mock.calls.GetComplianceSummaryPages, callInfo)
	locktaggingClientMockGetComplianceSummaryPages.Unlock()
	return mock.GetComplianceSummaryPagesFunc(in1, in2)
}

// GetComplianceSummaryPagesCalls gets all the calls that were made to GetComplianceSummaryPages.
// Check the length with:
//     len(mockedtaggingClient.GetComplianceSummaryPagesCalls())
func (mock *taggingClientMock) GetComplianceSummaryPagesCalls() []struct {
	In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
	In2 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
		In2 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool
	}
	locktaggingClientMockGetComplianceSummaryPages.RLock()
	calls = mock.calls.GetComplianceSummaryPages
	locktaggingClientMockGetComplianceSummaryPages.RUnlock()
	return calls
}

// GetComplianceSummaryPagesWithContext calls GetComplianceSummaryPagesWithContextFunc.
func (mock *taggingClientMock) GetComplianceSummaryPagesWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.GetComplianceSummaryInput, in3 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool, in4 ...request.Option) error {
	if mock.GetComplianceSummaryPagesWithContextFunc == nil {
		panic("taggingClientMock.GetComplianceSummaryPagesWithContextFunc: method is nil but taggingClient.GetComplianceSummaryPagesWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetComplianceSummaryInput
		In3 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool
		In4 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
		In4: in4,
	}
	locktaggingClientMockGetComplianceSummaryPagesWithContext.Lock()
	mock.calls.GetComplianceSummaryPagesWithContext = append(mock.calls.GetComplianceSummaryPagesWithContext, callInfo)
	locktaggingClientMockGetComplianceSummaryPagesWithContext.Unlock()
	return mock.GetComplianceSummaryPagesWithContextFunc(in1, in2, in3, in4...)
}

// GetComplianceSummaryPagesWithContextCalls gets all the calls that were made to GetComplianceSummaryPagesWithContext.
// Check the length with:
//     len(mockedtaggingClient.GetComplianceSummaryPagesWithContextCalls())
func (mock *taggingClientMock) GetComplianceSummaryPagesWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.GetComplianceSummaryInput
	In3 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool
	In4 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetComplianceSummaryInput
		In3 func(*resourcegroupstaggingapi.GetComplianceSummaryOutput, bool) bool
		In4 []request.Option
	}
	locktaggingClientMockGetComplianceSummaryPagesWithContext.RLock()
	calls = mock.calls.GetComplianceSummaryPagesWithContext
	locktaggingClientMockGetComplianceSummaryPagesWithContext.RUnlock()
	return calls
}

// GetComplianceSummaryRequest calls GetComplianceSummaryRequestFunc.
func (mock *taggingClientMock) GetComplianceSummaryRequest(in1 *resourcegroupstaggingapi.GetComplianceSummaryInput) (*request.Request, *resourcegroupstaggingapi.GetComplianceSummaryOutput) {
	if mock.GetComplianceSummaryRequestFunc == nil {
		panic("taggingClientMock.GetComplianceSummaryRequestFunc: method is nil but taggingClient.GetComplianceSummaryRequest was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
	}{
		In1: in1,
	}
	locktaggingClientMockGetComplianceSummaryRequest.Lock()
	mock.calls.GetComplianceSummaryRequest = append(mock.calls.GetComplianceSummaryRequest, callInfo)
	locktaggingClientMockGetComplianceSummaryRequest.Unlock()
	return mock.GetComplianceSummaryRequestFunc(in1)
}

// GetComplianceSummaryRequestCalls gets all the calls that were made to GetComplianceSummaryRequest.
// Check the length with:
//     len(mockedtaggingClient.GetComplianceSummaryRequestCalls())
func (mock *taggingClientMock) GetComplianceSummaryRequestCalls() []struct {
	In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetComplianceSummaryInput
	}
	locktaggingClientMockGetComplianceSummaryRequest.RLock()
	calls = mock.calls.GetComplianceSummaryRequest
	locktaggingClientMockGetComplianceSummaryRequest.RUnlock()
	return calls
}

// GetComplianceSummaryWithContext calls GetComplianceSummaryWithContextFunc.
func (mock *taggingClientMock) GetComplianceSummaryWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.GetComplianceSummaryInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetComplianceSummaryOutput, error) {
	if mock.GetComplianceSummaryWithContextFunc == nil {
		panic("taggingClientMock.GetComplianceSummaryWithContextFunc: method is nil but taggingClient.GetComplianceSummaryWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetComplianceSummaryInput
		In3 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
	}
	locktaggingClientMockGetComplianceSummaryWithContext.Lock()
	mock.calls.GetComplianceSummaryWithContext = append(mock.calls.GetComplianceSummaryWithContext, callInfo)
	locktaggingClientMockGetComplianceSummaryWithContext.Unlock()
	return mock.GetComplianceSummaryWithContextFunc(in1, in2, in3...)
}

// GetComplianceSummaryWithContextCalls gets all the calls that were made to GetComplianceSummaryWithContext.
// Check the length with:
//     len(mockedtaggingClient.GetComplianceSummaryWithContextCalls())
func (mock *taggingClientMock) GetComplianceSummaryWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.GetComplianceSummaryInput
	In3 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetComplianceSummaryInput
		In3 []request.Option
	}
	locktaggingClientMockGetComplianceSummaryWithContext.RLock()
	calls = mock.calls.GetComplianceSummaryWithContext
	locktaggingClientMockGetComplianceSummaryWithContext.RUnlock()
	return calls
}

// GetResources calls GetResourcesFunc.
func (mock *taggingClientMock) GetResources(in1 *resourcegroupstaggingapi.GetResourcesInput) (*resourcegroupstaggingapi.GetResourcesOutput, error) {
	if mock.GetResourcesFunc == nil {
		panic("taggingClientMock.GetResourcesFunc: method is nil but taggingClient.GetResources was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetResourcesInput
	}{
		In1: in1,
	}
	locktaggingClientMockGetResources.Lock()
	mock.calls.GetResources = append(mock.calls.GetResources, callInfo)
	locktaggingClientMockGetResources.Unlock()
	return mock.GetResourcesFunc(in1)
}

// GetResourcesCalls gets all the calls that were made to GetResources.
// Check the length with:
//     len(mockedtaggingClient.GetResourcesCalls())
func (mock *taggingClientMock) GetResourcesCalls() []struct {
	In1 *resourcegroupstaggingapi.GetResourcesInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetResourcesInput
	}
	locktaggingClientMockGetResources.RLock()
	calls = mock.calls.GetResources
	locktaggingClientMockGetResources.RUnlock()
	return calls
}

// GetResourcesPages calls GetResourcesPagesFunc.
func (mock *taggingClientMock) GetResourcesPages(in1 *resourcegroupstaggingapi.GetResourcesInput, in2 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool) error {
	if mock.GetResourcesPagesFunc == nil {
		panic("taggingClientMock.GetResourcesPagesFunc: method is nil but taggingClient.GetResourcesPages was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetResourcesInput
		In2 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool
	}{
		In1: in1,
		In2: in2,
	}
	locktaggingClientMockGetResourcesPages.Lock()
	mock.calls.GetResourcesPages = append(mock.calls.GetResourcesPages, callInfo)
	locktaggingClientMockGetResourcesPages.Unlock()
	return mock.GetResourcesPagesFunc(in1, in2)
}

// GetResourcesPagesCalls gets all the calls that were made to GetResourcesPages.
// Check the length with:
//     len(mockedtaggingClient.GetResourcesPagesCalls())
func (mock *taggingClientMock) GetResourcesPagesCalls() []struct {
	In1 *resourcegroupstaggingapi.GetResourcesInput
	In2 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetResourcesInput
		In2 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool
	}
	locktaggingClientMockGetResourcesPages.RLock()
	calls = mock.calls.GetResourcesPages
	locktaggingClientMockGetResourcesPages.RUnlock()
	return calls
}

// GetResourcesPagesWithContext calls GetResourcesPagesWithContextFunc.
func (mock *taggingClientMock) GetResourcesPagesWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.GetResourcesInput, in3 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool, in4 ...request.Option) error {
	if mock.GetResourcesPagesWithContextFunc == nil {
		panic("taggingClientMock.GetResourcesPagesWithContextFunc: method is nil but taggingClient.GetResourcesPagesWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetResourcesInput
		In3 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool
		In4 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
		In4: in4,
	}
	locktaggingClientMockGetResourcesPagesWithContext.Lock()
	mock.calls.GetResourcesPagesWithContext = append(mock.calls.GetResourcesPagesWithContext, callInfo)
	locktaggingClientMockGetResourcesPagesWithContext.Unlock()
	return mock.GetResourcesPagesWithContextFunc(in1, in2, in3, in4...)
}

// GetResourcesPagesWithContextCalls gets all the calls that were made to GetResourcesPagesWithContext.
// Check the length with:
//     len(mockedtaggingClient.GetResourcesPagesWithContextCalls())
func (mock *taggingClientMock) GetResourcesPagesWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.GetResourcesInput
	In3 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool
	In4 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetResourcesInput
		In3 func(*resourcegroupstaggingapi.GetResourcesOutput, bool) bool
		In4 []request.Option
	}
	locktaggingClientMockGetResourcesPagesWithContext.RLock()
	calls = mock.calls.GetResourcesPagesWithContext
	locktaggingClientMockGetResourcesPagesWithContext.RUnlock()
	return calls
}

// GetResourcesRequest calls GetResourcesRequestFunc.
func (mock *taggingClientMock) GetResourcesRequest(in1 *resourcegroupstaggingapi.GetResourcesInput) (*request.Request, *resourcegroupstaggingapi.GetResourcesOutput) {
	if mock.GetResourcesRequestFunc == nil {
		panic("taggingClientMock.GetResourcesRequestFunc: method is nil but taggingClient.GetResourcesRequest was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetResourcesInput
	}{
		In1: in1,
	}
	locktaggingClientMockGetResourcesRequest.Lock()
	mock.calls.GetResourcesRequest = append(mock.calls.GetResourcesRequest, callInfo)
	locktaggingClientMockGetResourcesRequest.Unlock()
	return mock.GetResourcesRequestFunc(in1)
}

// GetResourcesRequestCalls gets all the calls that were made to GetResourcesRequest.
// Check the length with:
//     len(mockedtaggingClient.GetResourcesRequestCalls())
func (mock *taggingClientMock) GetResourcesRequestCalls() []struct {
	In1 *resourcegroupstaggingapi.GetResourcesInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetResourcesInput
	}
	locktaggingClientMockGetResourcesRequest.RLock()
	calls = mock.calls.GetResourcesRequest
	locktaggingClientMockGetResourcesRequest.RUnlock()
	return calls
}

// GetResourcesWithContext calls GetResourcesWithContextFunc.
func (mock *taggingClientMock) GetResourcesWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.GetResourcesInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetResourcesOutput, error) {
	if mock.GetResourcesWithContextFunc == nil {
		panic("taggingClientMock.GetResourcesWithContextFunc: method is nil but taggingClient.GetResourcesWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetResourcesInput
		In3 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
	}
	locktaggingClientMockGetResourcesWithContext.Lock()
	mock.calls.GetResourcesWithContext = append(mock.calls.GetResourcesWithContext, callInfo)
	locktaggingClientMockGetResourcesWithContext.Unlock()
	return mock.GetResourcesWithContextFunc(in1, in2, in3...)
}

// GetResourcesWithContextCalls gets all the calls that were made to GetResourcesWithContext.
// Check the length with:
//     len(mockedtaggingClient.GetResourcesWithContextCalls())
func (mock *taggingClientMock) GetResourcesWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.GetResourcesInput
	In3 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetResourcesInput
		In3 []request.Option
	}
	locktaggingClientMockGetResourcesWithContext.RLock()
	calls = mock.calls.GetResourcesWithContext
	locktaggingClientMockGetResourcesWithContext.RUnlock()
	return calls
}

// GetTagKeys calls GetTagKeysFunc.
func (mock *taggingClientMock) GetTagKeys(in1 *resourcegroupstaggingapi.GetTagKeysInput) (*resourcegroupstaggingapi.GetTagKeysOutput, error) {
	if mock.GetTagKeysFunc == nil {
		panic("taggingClientMock.GetTagKeysFunc: method is nil but taggingClient.GetTagKeys was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetTagKeysInput
	}{
		In1: in1,
	}
	locktaggingClientMockGetTagKeys.Lock()
	mock.calls.GetTagKeys = append(mock.calls.GetTagKeys, callInfo)
	locktaggingClientMockGetTagKeys.Unlock()
	return mock.GetTagKeysFunc(in1)
}

// GetTagKeysCalls gets all the calls that were made to GetTagKeys.
// Check the length with:
//     len(mockedtaggingClient.GetTagKeysCalls())
func (mock *taggingClientMock) GetTagKeysCalls() []struct {
	In1 *resourcegroupstaggingapi.GetTagKeysInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetTagKeysInput
	}
	locktaggingClientMockGetTagKeys.RLock()
	calls = mock.calls.GetTagKeys
	locktaggingClientMockGetTagKeys.RUnlock()
	return calls
}

// GetTagKeysPages calls GetTagKeysPagesFunc.
func (mock *taggingClientMock) GetTagKeysPages(in1 *resourcegroupstaggingapi.GetTagKeysInput, in2 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool) error {
	if mock.GetTagKeysPagesFunc == nil {
		panic("taggingClientMock.GetTagKeysPagesFunc: method is nil but taggingClient.GetTagKeysPages was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetTagKeysInput
		In2 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool
	}{
		In1: in1,
		In2: in2,
	}
	locktaggingClientMockGetTagKeysPages.Lock()
	mock.calls.GetTagKeysPages = append(mock.calls.GetTagKeysPages, callInfo)
	locktaggingClientMockGetTagKeysPages.Unlock()
	return mock.GetTagKeysPagesFunc(in1, in2)
}

// GetTagKeysPagesCalls gets all the calls that were made to GetTagKeysPages.
// Check the length with:
//     len(mockedtaggingClient.GetTagKeysPagesCalls())
func (mock *taggingClientMock) GetTagKeysPagesCalls() []struct {
	In1 *resourcegroupstaggingapi.GetTagKeysInput
	In2 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetTagKeysInput
		In2 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool
	}
	locktaggingClientMockGetTagKeysPages.RLock()
	calls = mock.calls.GetTagKeysPages
	locktaggingClientMockGetTagKeysPages.RUnlock()
	return calls
}

// GetTagKeysPagesWithContext calls GetTagKeysPagesWithContextFunc.
func (mock *taggingClientMock) GetTagKeysPagesWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagKeysInput, in3 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool, in4 ...request.Option) error {
	if mock.GetTagKeysPagesWithContextFunc == nil {
		panic("taggingClientMock.GetTagKeysPagesWithContextFunc: method is nil but taggingClient.GetTagKeysPagesWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetTagKeysInput
		In3 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool
		In4 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
		In4: in4,
	}
	locktaggingClientMockGetTagKeysPagesWithContext.Lock()
	mock.calls.GetTagKeysPagesWithContext = append(mock.calls.GetTagKeysPagesWithContext, callInfo)
	locktaggingClientMockGetTagKeysPagesWithContext.Unlock()
	return mock.GetTagKeysPagesWithContextFunc(in1, in2, in3, in4...)
}

// GetTagKeysPagesWithContextCalls gets all the calls that were made to GetTagKeysPagesWithContext.
// Check the length with:
//     len(mockedtaggingClient.GetTagKeysPagesWithContextCalls())
func (mock *taggingClientMock) GetTagKeysPagesWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.GetTagKeysInput
	In3 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool
	In4 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetTagKeysInput
		In3 func(*resourcegroupstaggingapi.GetTagKeysOutput, bool) bool
		In4 []request.Option
	}
	locktaggingClientMockGetTagKeysPagesWithContext.RLock()
	calls = mock.calls.GetTagKeysPagesWithContext
	locktaggingClientMockGetTagKeysPagesWithContext.RUnlock()
	return calls
}

// GetTagKeysRequest calls GetTagKeysRequestFunc.
func (mock *taggingClientMock) GetTagKeysRequest(in1 *resourcegroupstaggingapi.GetTagKeysInput) (*request.Request, *resourcegroupstaggingapi.GetTagKeysOutput) {
	if mock.GetTagKeysRequestFunc == nil {
		panic("taggingClientMock.GetTagKeysRequestFunc: method is nil but taggingClient.GetTagKeysRequest was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetTagKeysInput
	}{
		In1: in1,
	}
	locktaggingClientMockGetTagKeysRequest.Lock()
	mock.calls.GetTagKeysRequest = append(mock.calls.GetTagKeysRequest, callInfo)
	locktaggingClientMockGetTagKeysRequest.Unlock()
	return mock.GetTagKeysRequestFunc(in1)
}

// GetTagKeysRequestCalls gets all the calls that were made to GetTagKeysRequest.
// Check the length with:
//     len(mockedtaggingClient.GetTagKeysRequestCalls())
func (mock *taggingClientMock) GetTagKeysRequestCalls() []struct {
	In1 *resourcegroupstaggingapi.GetTagKeysInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetTagKeysInput
	}
	locktaggingClientMockGetTagKeysRequest.RLock()
	calls = mock.calls.GetTagKeysRequest
	locktaggingClientMockGetTagKeysRequest.RUnlock()
	return calls
}

// GetTagKeysWithContext calls GetTagKeysWithContextFunc.
func (mock *taggingClientMock) GetTagKeysWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagKeysInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetTagKeysOutput, error) {
	if mock.GetTagKeysWithContextFunc == nil {
		panic("taggingClientMock.GetTagKeysWithContextFunc: method is nil but taggingClient.GetTagKeysWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetTagKeysInput
		In3 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
	}
	locktaggingClientMockGetTagKeysWithContext.Lock()
	mock.calls.GetTagKeysWithContext = append(mock.calls.GetTagKeysWithContext, callInfo)
	locktaggingClientMockGetTagKeysWithContext.Unlock()
	return mock.GetTagKeysWithContextFunc(in1, in2, in3...)
}

// GetTagKeysWithContextCalls gets all the calls that were made to GetTagKeysWithContext.
// Check the length with:
//     len(mockedtaggingClient.GetTagKeysWithContextCalls())
func (mock *taggingClientMock) GetTagKeysWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.GetTagKeysInput
	In3 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetTagKeysInput
		In3 []request.Option
	}
	locktaggingClientMockGetTagKeysWithContext.RLock()
	calls = mock.calls.GetTagKeysWithContext
	locktaggingClientMockGetTagKeysWithContext.RUnlock()
	return calls
}

// GetTagValues calls GetTagValuesFunc.
func (mock *taggingClientMock) GetTagValues(in1 *resourcegroupstaggingapi.GetTagValuesInput) (*resourcegroupstaggingapi.GetTagValuesOutput, error) {
	if mock.GetTagValuesFunc == nil {
		panic("taggingClientMock.GetTagValuesFunc: method is nil but taggingClient.GetTagValues was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetTagValuesInput
	}{
		In1: in1,
	}
	locktaggingClientMockGetTagValues.Lock()
	mock.calls.GetTagValues = append(mock.calls.GetTagValues, callInfo)
	locktaggingClientMockGetTagValues.Unlock()
	return mock.GetTagValuesFunc(in1)
}

// GetTagValuesCalls gets all the calls that were made to GetTagValues.
// Check the length with:
//     len(mockedtaggingClient.GetTagValuesCalls())
func (mock *taggingClientMock) GetTagValuesCalls() []struct {
	In1 *resourcegroupstaggingapi.GetTagValuesInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetTagValuesInput
	}
	locktaggingClientMockGetTagValues.RLock()
	calls = mock.calls.GetTagValues
	locktaggingClientMockGetTagValues.RUnlock()
	return calls
}

// GetTagValuesPages calls GetTagValuesPagesFunc.
func (mock *taggingClientMock) GetTagValuesPages(in1 *resourcegroupstaggingapi.GetTagValuesInput, in2 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool) error {
	if mock.GetTagValuesPagesFunc == nil {
		panic("taggingClientMock.GetTagValuesPagesFunc: method is nil but taggingClient.GetTagValuesPages was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetTagValuesInput
		In2 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool
	}{
		In1: in1,
		In2: in2,
	}
	locktaggingClientMockGetTagValuesPages.Lock()
	mock.calls.GetTagValuesPages = append(mock.calls.GetTagValuesPages, callInfo)
	locktaggingClientMockGetTagValuesPages.Unlock()
	return mock.GetTagValuesPagesFunc(in1, in2)
}

// GetTagValuesPagesCalls gets all the calls that were made to GetTagValuesPages.
// Check the length with:
//     len(mockedtaggingClient.GetTagValuesPagesCalls())
func (mock *taggingClientMock) GetTagValuesPagesCalls() []struct {
	In1 *resourcegroupstaggingapi.GetTagValuesInput
	In2 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetTagValuesInput
		In2 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool
	}
	locktaggingClientMockGetTagValuesPages.RLock()
	calls = mock.calls.GetTagValuesPages
	locktaggingClientMockGetTagValuesPages.RUnlock()
	return calls
}

// GetTagValuesPagesWithContext calls GetTagValuesPagesWithContextFunc.
func (mock *taggingClientMock) GetTagValuesPagesWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagValuesInput, in3 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool, in4 ...request.Option) error {
	if mock.GetTagValuesPagesWithContextFunc == nil {
		panic("taggingClientMock.GetTagValuesPagesWithContextFunc: method is nil but taggingClient.GetTagValuesPagesWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetTagValuesInput
		In3 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool
		In4 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
		In4: in4,
	}
	locktaggingClientMockGetTagValuesPagesWithContext.Lock()
	mock.calls.GetTagValuesPagesWithContext = append(mock.calls.GetTagValuesPagesWithContext, callInfo)
	locktaggingClientMockGetTagValuesPagesWithContext.Unlock()
	return mock.GetTagValuesPagesWithContextFunc(in1, in2, in3, in4...)
}

// GetTagValuesPagesWithContextCalls gets all the calls that were made to GetTagValuesPagesWithContext.
// Check the length with:
//     len(mockedtaggingClient.GetTagValuesPagesWithContextCalls())
func (mock *taggingClientMock) GetTagValuesPagesWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.GetTagValuesInput
	In3 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool
	In4 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetTagValuesInput
		In3 func(*resourcegroupstaggingapi.GetTagValuesOutput, bool) bool
		In4 []request.Option
	}
	locktaggingClientMockGetTagValuesPagesWithContext.RLock()
	calls = mock.calls.GetTagValuesPagesWithContext
	locktaggingClientMockGetTagValuesPagesWithContext.RUnlock()
	return calls
}

// GetTagValuesRequest calls GetTagValuesRequestFunc.
func (mock *taggingClientMock) GetTagValuesRequest(in1 *resourcegroupstaggingapi.GetTagValuesInput) (*request.Request, *resourcegroupstaggingapi.GetTagValuesOutput) {
	if mock.GetTagValuesRequestFunc == nil {
		panic("taggingClientMock.GetTagValuesRequestFunc: method is nil but taggingClient.GetTagValuesRequest was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.GetTagValuesInput
	}{
		In1: in1,
	}
	locktaggingClientMockGetTagValuesRequest.Lock()
	mock.calls.GetTagValuesRequest = append(mock.calls.GetTagValuesRequest, callInfo)
	locktaggingClientMockGetTagValuesRequest.Unlock()
	return mock.GetTagValuesRequestFunc(in1)
}

// GetTagValuesRequestCalls gets all the calls that were made to GetTagValuesRequest.
// Check the length with:
//     len(mockedtaggingClient.GetTagValuesRequestCalls())
func (mock *taggingClientMock) GetTagValuesRequestCalls() []struct {
	In1 *resourcegroupstaggingapi.GetTagValuesInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.GetTagValuesInput
	}
	locktaggingClientMockGetTagValuesRequest.RLock()
	calls = mock.calls.GetTagValuesRequest
	locktaggingClientMockGetTagValuesRequest.RUnlock()
	return calls
}

// GetTagValuesWithContext calls GetTagValuesWithContextFunc.
func (mock *taggingClientMock) GetTagValuesWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.GetTagValuesInput, in3 ...request.Option) (*resourcegroupstaggingapi.GetTagValuesOutput, error) {
	if mock.GetTagValuesWithContextFunc == nil {
		panic("taggingClientMock.GetTagValuesWithContextFunc: method is nil but taggingClient.GetTagValuesWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetTagValuesInput
		In3 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
	}
	locktaggingClientMockGetTagValuesWithContext.Lock()
	mock.calls.GetTagValuesWithContext = append(mock.calls.GetTagValuesWithContext, callInfo)
	locktaggingClientMockGetTagValuesWithContext.Unlock()
	return mock.GetTagValuesWithContextFunc(in1, in2, in3...)
}

// GetTagValuesWithContextCalls gets all the calls that were made to GetTagValuesWithContext.
// Check the length with:
//     len(mockedtaggingClient.GetTagValuesWithContextCalls())
func (mock *taggingClientMock) GetTagValuesWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.GetTagValuesInput
	In3 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.GetTagValuesInput
		In3 []request.Option
	}
	locktaggingClientMockGetTagValuesWithContext.RLock()
	calls = mock.calls.GetTagValuesWithContext
	locktaggingClientMockGetTagValuesWithContext.RUnlock()
	return calls
}

// StartReportCreation calls StartReportCreationFunc.
func (mock *taggingClientMock) StartReportCreation(in1 *resourcegroupstaggingapi.StartReportCreationInput) (*resourcegroupstaggingapi.StartReportCreationOutput, error) {
	if mock.StartReportCreationFunc == nil {
		panic("taggingClientMock.StartReportCreationFunc: method is nil but taggingClient.StartReportCreation was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.StartReportCreationInput
	}{
		In1: in1,
	}
	locktaggingClientMockStartReportCreation.Lock()
	mock.calls.StartReportCreation = append(mock.calls.StartReportCreation, callInfo)
	locktaggingClientMockStartReportCreation.Unlock()
	return mock.StartReportCreationFunc(in1)
}

// StartReportCreationCalls gets all the calls that were made to StartReportCreation.
// Check the length with:
//     len(mockedtaggingClient.StartReportCreationCalls())
func (mock *taggingClientMock) StartReportCreationCalls() []struct {
	In1 *resourcegroupstaggingapi.StartReportCreationInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.StartReportCreationInput
	}
	locktaggingClientMockStartReportCreation.RLock()
	calls = mock.calls.StartReportCreation
	locktaggingClientMockStartReportCreation.RUnlock()
	return calls
}

// StartReportCreationRequest calls StartReportCreationRequestFunc.
func (mock *taggingClientMock) StartReportCreationRequest(in1 *resourcegroupstaggingapi.StartReportCreationInput) (*request.Request, *resourcegroupstaggingapi.StartReportCreationOutput) {
	if mock.StartReportCreationRequestFunc == nil {
		panic("taggingClientMock.StartReportCreationRequestFunc: method is nil but taggingClient.StartReportCreationRequest was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.StartReportCreationInput
	}{
		In1: in1,
	}
	locktaggingClientMockStartReportCreationRequest.Lock()
	mock.calls.StartReportCreationRequest = append(mock.calls.StartReportCreationRequest, callInfo)
	locktaggingClientMockStartReportCreationRequest.Unlock()
	return mock.StartReportCreationRequestFunc(in1)
}

// StartReportCreationRequestCalls gets all the calls that were made to StartReportCreationRequest.
// Check the length with:
//     len(mockedtaggingClient.StartReportCreationRequestCalls())
func (mock *taggingClientMock) StartReportCreationRequestCalls() []struct {
	In1 *resourcegroupstaggingapi.StartReportCreationInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.StartReportCreationInput
	}
	locktaggingClientMockStartReportCreationRequest.RLock()
	calls = mock.calls.StartReportCreationRequest
	locktaggingClientMockStartReportCreationRequest.RUnlock()
	return calls
}

// StartReportCreationWithContext calls StartReportCreationWithContextFunc.
func (mock *taggingClientMock) StartReportCreationWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.StartReportCreationInput, in3 ...request.Option) (*resourcegroupstaggingapi.StartReportCreationOutput, error) {
	if mock.StartReportCreationWithContextFunc == nil {
		panic("taggingClientMock.StartReportCreationWithContextFunc: method is nil but taggingClient.StartReportCreationWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.StartReportCreationInput
		In3 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
	}
	locktaggingClientMockStartReportCreationWithContext.Lock()
	mock.calls.StartReportCreationWithContext = append(mock.calls.StartReportCreationWithContext, callInfo)
	locktaggingClientMockStartReportCreationWithContext.Unlock()
	return mock.StartReportCreationWithContextFunc(in1, in2, in3...)
}

// StartReportCreationWithContextCalls gets all the calls that were made to StartReportCreationWithContext.
// Check the length with:
//     len(mockedtaggingClient.StartReportCreationWithContextCalls())
func (mock *taggingClientMock) StartReportCreationWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.StartReportCreationInput
	In3 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.StartReportCreationInput
		In3 []request.Option
	}
	locktaggingClientMockStartReportCreationWithContext.RLock()
	calls = mock.calls.StartReportCreationWithContext
	locktaggingClientMockStartReportCreationWithContext.RUnlock()
	return calls
}

// TagResources calls TagResourcesFunc.
func (mock *taggingClientMock) TagResources(in1 *resourcegroupstaggingapi.TagResourcesInput) (*resourcegroupstaggingapi.TagResourcesOutput, error) {
	if mock.TagResourcesFunc == nil {
		panic("taggingClientMock.TagResourcesFunc: method is nil but taggingClient.TagResources was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.TagResourcesInput
	}{
		In1: in1,
	}
	locktaggingClientMockTagResources.Lock()
	mock.calls.TagResources = append(mock.calls.TagResources, callInfo)
	locktaggingClientMockTagResources.Unlock()
	return mock.TagResourcesFunc(in1)
}

// TagResourcesCalls gets all the calls that were made to TagResources.
// Check the length with:
//     len(mockedtaggingClient.TagResourcesCalls())
func (mock *taggingClientMock) TagResourcesCalls() []struct {
	In1 *resourcegroupstaggingapi.TagResourcesInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.TagResourcesInput
	}
	locktaggingClientMockTagResources.RLock()
	calls = mock.calls.TagResources
	locktaggingClientMockTagResources.RUnlock()
	return calls
}

// TagResourcesRequest calls TagResourcesRequestFunc.
func (mock *taggingClientMock) TagResourcesRequest(in1 *resourcegroupstaggingapi.TagResourcesInput) (*request.Request, *resourcegroupstaggingapi.TagResourcesOutput) {
	if mock.TagResourcesRequestFunc == nil {
		panic("taggingClientMock.TagResourcesRequestFunc: method is nil but taggingClient.TagResourcesRequest was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.TagResourcesInput
	}{
		In1: in1,
	}
	locktaggingClientMockTagResourcesRequest.Lock()
	mock.calls.TagResourcesRequest = append(mock.calls.TagResourcesRequest, callInfo)
	locktaggingClientMockTagResourcesRequest.Unlock()
	return mock.TagResourcesRequestFunc(in1)
}

// TagResourcesRequestCalls gets all the calls that were made to TagResourcesRequest.
// Check the length with:
//     len(mockedtaggingClient.TagResourcesRequestCalls())
func (mock *taggingClientMock) TagResourcesRequestCalls() []struct {
	In1 *resourcegroupstaggingapi.TagResourcesInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.TagResourcesInput
	}
	locktaggingClientMockTagResourcesRequest.RLock()
	calls = mock.calls.TagResourcesRequest
	locktaggingClientMockTagResourcesRequest.RUnlock()
	return calls
}

// TagResourcesWithContext calls TagResourcesWithContextFunc.
func (mock *taggingClientMock) TagResourcesWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.TagResourcesInput, in3 ...request.Option) (*resourcegroupstaggingapi.TagResourcesOutput, error) {
	if mock.TagResourcesWithContextFunc == nil {
		panic("taggingClientMock.TagResourcesWithContextFunc: method is nil but taggingClient.TagResourcesWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.TagResourcesInput
		In3 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
	}
	locktaggingClientMockTagResourcesWithContext.Lock()
	mock.calls.TagResourcesWithContext = append(mock.calls.TagResourcesWithContext, callInfo)
	locktaggingClientMockTagResourcesWithContext.Unlock()
	return mock.TagResourcesWithContextFunc(in1, in2, in3...)
}

// TagResourcesWithContextCalls gets all the calls that were made to TagResourcesWithContext.
// Check the length with:
//     len(mockedtaggingClient.TagResourcesWithContextCalls())
func (mock *taggingClientMock) TagResourcesWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.TagResourcesInput
	In3 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.TagResourcesInput
		In3 []request.Option
	}
	locktaggingClientMockTagResourcesWithContext.RLock()
	calls = mock.calls.TagResourcesWithContext
	locktaggingClientMockTagResourcesWithContext.RUnlock()
	return calls
}

// UntagResources calls UntagResourcesFunc.
func (mock *taggingClientMock) UntagResources(in1 *resourcegroupstaggingapi.UntagResourcesInput) (*resourcegroupstaggingapi.UntagResourcesOutput, error) {
	if mock.UntagResourcesFunc == nil {
		panic("taggingClientMock.UntagResourcesFunc: method is nil but taggingClient.UntagResources was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.UntagResourcesInput
	}{
		In1: in1,
	}
	locktaggingClientMockUntagResources.Lock()
	mock.calls.UntagResources = append(mock.calls.UntagResources, callInfo)
	locktaggingClientMockUntagResources.Unlock()
	return mock.UntagResourcesFunc(in1)
}

// UntagResourcesCalls gets all the calls that were made to UntagResources.
// Check the length with:
//     len(mockedtaggingClient.UntagResourcesCalls())
func (mock *taggingClientMock) UntagResourcesCalls() []struct {
	In1 *resourcegroupstaggingapi.UntagResourcesInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.UntagResourcesInput
	}
	locktaggingClientMockUntagResources.RLock()
	calls = mock.calls.UntagResources
	locktaggingClientMockUntagResources.RUnlock()
	return calls
}

// UntagResourcesRequest calls UntagResourcesRequestFunc.
func (mock *taggingClientMock) UntagResourcesRequest(in1 *resourcegroupstaggingapi.UntagResourcesInput) (*request.Request, *resourcegroupstaggingapi.UntagResourcesOutput) {
	if mock.UntagResourcesRequestFunc == nil {
		panic("taggingClientMock.UntagResourcesRequestFunc: method is nil but taggingClient.UntagResourcesRequest was just called")
	}
	callInfo := struct {
		In1 *resourcegroupstaggingapi.UntagResourcesInput
	}{
		In1: in1,
	}
	locktaggingClientMockUntagResourcesRequest.Lock()
	mock.calls.UntagResourcesRequest = append(mock.calls.UntagResourcesRequest, callInfo)
	locktaggingClientMockUntagResourcesRequest.Unlock()
	return mock.UntagResourcesRequestFunc(in1)
}

// UntagResourcesRequestCalls gets all the calls that were made to UntagResourcesRequest.
// Check the length with:
//     len(mockedtaggingClient.UntagResourcesRequestCalls())
func (mock *taggingClientMock) UntagResourcesRequestCalls() []struct {
	In1 *resourcegroupstaggingapi.UntagResourcesInput
} {
	var calls []struct {
		In1 *resourcegroupstaggingapi.UntagResourcesInput
	}
	locktaggingClientMockUntagResourcesRequest.RLock()
	calls = mock.calls.UntagResourcesRequest
	locktaggingClientMockUntagResourcesRequest.RUnlock()
	return calls
}

// UntagResourcesWithContext calls UntagResourcesWithContextFunc.
func (mock *taggingClientMock) UntagResourcesWithContext(in1 context.Context, in2 *resourcegroupstaggingapi.UntagResourcesInput, in3 ...request.Option) (*resourcegroupstaggingapi.UntagResourcesOutput, error) {
	if mock.UntagResourcesWithContextFunc == nil {
		panic("taggingClientMock.UntagResourcesWithContextFunc: method is nil but taggingClient.UntagResourcesWithContext was just called")
	}
	callInfo := struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.UntagResourcesInput
		In3 []request.Option
	}{
		In1: in1,
		In2: in2,
		In3: in3,
	}
	locktaggingClientMockUntagResourcesWithContext.Lock()
	mock.calls.UntagResourcesWithContext = append(mock.calls.UntagResourcesWithContext, callInfo)
	locktaggingClientMockUntagResourcesWithContext.Unlock()
	return mock.UntagResourcesWithContextFunc(in1, in2, in3...)
}

// UntagResourcesWithContextCalls gets all the calls that were made to UntagResourcesWithContext.
// Check the length with:
//     len(mockedtaggingClient.UntagResourcesWithContextCalls())
func (mock *taggingClientMock) UntagResourcesWithContextCalls() []struct {
	In1 context.Context
	In2 *resourcegroupstaggingapi.UntagResourcesInput
	In3 []request.Option
} {
	var calls []struct {
		In1 context.Context
		In2 *resourcegroupstaggingapi.UntagResourcesInput
		In3 []request.Option
	}
	locktaggingClientMockUntagResourcesWithContext.RLock()
	calls = mock.calls.UntagResourcesWithContext
	locktaggingClientMockUntagResourcesWithContext.RUnlock()
	return calls
}
